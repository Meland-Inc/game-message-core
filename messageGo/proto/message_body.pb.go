// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: message_body.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 消息交互体.
type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         EnvelopeType `protobuf:"varint,1,opt,name=type,proto3,enum=gameMessageCore.EnvelopeType" json:"type,omitempty"`
	SeqId        int32        `protobuf:"varint,2,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	ErrorCode    int32        `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string       `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Types that are assignable to Payload:
	//	*Envelope_ItemGetRequest
	//	*Envelope_ItemGetResponse
	//	*Envelope_ItemUseRequest
	//	*Envelope_ItemUseResponse
	//	*Envelope_ItemDropRequest
	//	*Envelope_ItemDropResponse
	//	*Envelope_UpdateAvatarRequest
	//	*Envelope_UpdateAvatarResponse
	//	*Envelope_UnloadAvatarRequest
	//	*Envelope_UnloadAvatarResponse
	//	*Envelope_BroadCastItemAddResponse
	//	*Envelope_BroadCastItemUpdateResponse
	//	*Envelope_BroadCastItemDelResponse
	//	*Envelope_BroadCastUpdateItemSlotResponse
	//	*Envelope_GetItemSlotRequest
	//	*Envelope_GetItemSlotResponse
	//	*Envelope_UpgradeItemSlotRequest
	//	*Envelope_UpgradeItemSlotResponse
	//	*Envelope_SigninPlayerRequest
	//	*Envelope_SigninPlayerResponse
	//	*Envelope_SignOutPlayerRequest
	//	*Envelope_SignOutPlayerResponse
	//	*Envelope_UpgradePlayerLevelRequest
	//	*Envelope_UpgradePlayerLevelResponse
	//	*Envelope_QueryPlayerRequest
	//	*Envelope_QueryPlayerResponse
	//	*Envelope_CreatePlayerRequest
	//	*Envelope_CreatePlayerResponse
	//	*Envelope_EnterMapRequest
	//	*Envelope_EnterMapResponse
	//	*Envelope_UpdateSelfLocationRequest
	//	*Envelope_UpdateSelfLocationResponse
	//	*Envelope_UseSkillRequest
	//	*Envelope_UseSkillResponse
	//	*Envelope_PickFallingObjectRequest
	//	*Envelope_PickFallingObjectResponse
	//	*Envelope_RespawnPlayerRequest
	//	*Envelope_RespawnPlayerResponse
	//	*Envelope_BroadCastInitMapElementResponse
	//	*Envelope_BroadCastMapEntityUpdateResponse
	//	*Envelope_BroadCastEntityDestroyResponse
	//	*Envelope_BroadCastEntityMoveResponse
	//	*Envelope_BroadCastEntityCombatResponse
	//	*Envelope_BroadCastRespawnPlayerResponse
	//	*Envelope_TeleportRequest
	//	*Envelope_TeleportResponse
	//	*Envelope_BroadCastEntityProfileUpdateResponse
	//	*Envelope_BroadCastMonsterDeathResponse
	//	*Envelope_SelfTasksRequest
	//	*Envelope_SelfTasksResponse
	//	*Envelope_BroadCastUpdateTaskListResponse
	//	*Envelope_AcceptTaskRequest
	//	*Envelope_AcceptTaskResponse
	//	*Envelope_AbandonmentTaskRequest
	//	*Envelope_AbandonmentTaskResponse
	//	*Envelope_TaskRewardRequest
	//	*Envelope_TaskRewardResponse
	//	*Envelope_TaskListRewardRequest
	//	*Envelope_TaskListRewardResponse
	//	*Envelope_UpgradeTaskProgressRequest
	//	*Envelope_UpgradeTaskProgressResponse
	//	*Envelope_BroadCastTaskRewardResponse
	//	*Envelope_SendChatMessageRequest
	//	*Envelope_SendChatMessageResponse
	//	*Envelope_BroadCastChatMessagesResponse
	//	*Envelope_BroadCastRemoveChatMessageResponse
	//	*Envelope_BroadCastUpdateChatStateResponse
	//	*Envelope_PingRequest
	//	*Envelope_PingResponse
	Payload isEnvelope_Payload `protobuf_oneof:"payload"`
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetType() EnvelopeType {
	if x != nil {
		return x.Type
	}
	return EnvelopeType_Unknown
}

func (x *Envelope) GetSeqId() int32 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Envelope) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *Envelope) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (m *Envelope) GetPayload() isEnvelope_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Envelope) GetItemGetRequest() *ItemGetRequest {
	if x, ok := x.GetPayload().(*Envelope_ItemGetRequest); ok {
		return x.ItemGetRequest
	}
	return nil
}

func (x *Envelope) GetItemGetResponse() *ItemGetResponse {
	if x, ok := x.GetPayload().(*Envelope_ItemGetResponse); ok {
		return x.ItemGetResponse
	}
	return nil
}

func (x *Envelope) GetItemUseRequest() *ItemUseRequest {
	if x, ok := x.GetPayload().(*Envelope_ItemUseRequest); ok {
		return x.ItemUseRequest
	}
	return nil
}

func (x *Envelope) GetItemUseResponse() *ItemUseResponse {
	if x, ok := x.GetPayload().(*Envelope_ItemUseResponse); ok {
		return x.ItemUseResponse
	}
	return nil
}

func (x *Envelope) GetItemDropRequest() *ItemDropRequest {
	if x, ok := x.GetPayload().(*Envelope_ItemDropRequest); ok {
		return x.ItemDropRequest
	}
	return nil
}

func (x *Envelope) GetItemDropResponse() *ItemDropResponse {
	if x, ok := x.GetPayload().(*Envelope_ItemDropResponse); ok {
		return x.ItemDropResponse
	}
	return nil
}

func (x *Envelope) GetUpdateAvatarRequest() *UpdateAvatarRequest {
	if x, ok := x.GetPayload().(*Envelope_UpdateAvatarRequest); ok {
		return x.UpdateAvatarRequest
	}
	return nil
}

func (x *Envelope) GetUpdateAvatarResponse() *UpdateAvatarResponse {
	if x, ok := x.GetPayload().(*Envelope_UpdateAvatarResponse); ok {
		return x.UpdateAvatarResponse
	}
	return nil
}

func (x *Envelope) GetUnloadAvatarRequest() *UnloadAvatarRequest {
	if x, ok := x.GetPayload().(*Envelope_UnloadAvatarRequest); ok {
		return x.UnloadAvatarRequest
	}
	return nil
}

func (x *Envelope) GetUnloadAvatarResponse() *UnloadAvatarResponse {
	if x, ok := x.GetPayload().(*Envelope_UnloadAvatarResponse); ok {
		return x.UnloadAvatarResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastItemAddResponse() *BroadCastItemAddResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastItemAddResponse); ok {
		return x.BroadCastItemAddResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastItemUpdateResponse() *BroadCastItemUpdateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastItemUpdateResponse); ok {
		return x.BroadCastItemUpdateResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastItemDelResponse() *BroadCastItemDelResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastItemDelResponse); ok {
		return x.BroadCastItemDelResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastUpdateItemSlotResponse() *BroadCastUpdateItemSlotResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastUpdateItemSlotResponse); ok {
		return x.BroadCastUpdateItemSlotResponse
	}
	return nil
}

func (x *Envelope) GetGetItemSlotRequest() *GetItemSlotRequest {
	if x, ok := x.GetPayload().(*Envelope_GetItemSlotRequest); ok {
		return x.GetItemSlotRequest
	}
	return nil
}

func (x *Envelope) GetGetItemSlotResponse() *GetItemSlotResponse {
	if x, ok := x.GetPayload().(*Envelope_GetItemSlotResponse); ok {
		return x.GetItemSlotResponse
	}
	return nil
}

func (x *Envelope) GetUpgradeItemSlotRequest() *UpgradeItemSlotRequest {
	if x, ok := x.GetPayload().(*Envelope_UpgradeItemSlotRequest); ok {
		return x.UpgradeItemSlotRequest
	}
	return nil
}

func (x *Envelope) GetUpgradeItemSlotResponse() *UpgradeItemSlotResponse {
	if x, ok := x.GetPayload().(*Envelope_UpgradeItemSlotResponse); ok {
		return x.UpgradeItemSlotResponse
	}
	return nil
}

func (x *Envelope) GetSigninPlayerRequest() *SigninPlayerRequest {
	if x, ok := x.GetPayload().(*Envelope_SigninPlayerRequest); ok {
		return x.SigninPlayerRequest
	}
	return nil
}

func (x *Envelope) GetSigninPlayerResponse() *SigninPlayerResponse {
	if x, ok := x.GetPayload().(*Envelope_SigninPlayerResponse); ok {
		return x.SigninPlayerResponse
	}
	return nil
}

func (x *Envelope) GetSignOutPlayerRequest() *SignOutPlayerRequest {
	if x, ok := x.GetPayload().(*Envelope_SignOutPlayerRequest); ok {
		return x.SignOutPlayerRequest
	}
	return nil
}

func (x *Envelope) GetSignOutPlayerResponse() *SignOutPlayerResponse {
	if x, ok := x.GetPayload().(*Envelope_SignOutPlayerResponse); ok {
		return x.SignOutPlayerResponse
	}
	return nil
}

func (x *Envelope) GetUpgradePlayerLevelRequest() *UpgradePlayerLevelRequest {
	if x, ok := x.GetPayload().(*Envelope_UpgradePlayerLevelRequest); ok {
		return x.UpgradePlayerLevelRequest
	}
	return nil
}

func (x *Envelope) GetUpgradePlayerLevelResponse() *UpgradePlayerLevelResponse {
	if x, ok := x.GetPayload().(*Envelope_UpgradePlayerLevelResponse); ok {
		return x.UpgradePlayerLevelResponse
	}
	return nil
}

func (x *Envelope) GetQueryPlayerRequest() *QueryPlayerRequest {
	if x, ok := x.GetPayload().(*Envelope_QueryPlayerRequest); ok {
		return x.QueryPlayerRequest
	}
	return nil
}

func (x *Envelope) GetQueryPlayerResponse() *QueryPlayerResponse {
	if x, ok := x.GetPayload().(*Envelope_QueryPlayerResponse); ok {
		return x.QueryPlayerResponse
	}
	return nil
}

func (x *Envelope) GetCreatePlayerRequest() *CreatePlayerRequest {
	if x, ok := x.GetPayload().(*Envelope_CreatePlayerRequest); ok {
		return x.CreatePlayerRequest
	}
	return nil
}

func (x *Envelope) GetCreatePlayerResponse() *CreatePlayerResponse {
	if x, ok := x.GetPayload().(*Envelope_CreatePlayerResponse); ok {
		return x.CreatePlayerResponse
	}
	return nil
}

func (x *Envelope) GetEnterMapRequest() *EnterMapRequest {
	if x, ok := x.GetPayload().(*Envelope_EnterMapRequest); ok {
		return x.EnterMapRequest
	}
	return nil
}

func (x *Envelope) GetEnterMapResponse() *EnterMapResponse {
	if x, ok := x.GetPayload().(*Envelope_EnterMapResponse); ok {
		return x.EnterMapResponse
	}
	return nil
}

func (x *Envelope) GetUpdateSelfLocationRequest() *UpdateSelfLocationRequest {
	if x, ok := x.GetPayload().(*Envelope_UpdateSelfLocationRequest); ok {
		return x.UpdateSelfLocationRequest
	}
	return nil
}

func (x *Envelope) GetUpdateSelfLocationResponse() *UpdateSelfLocationResponse {
	if x, ok := x.GetPayload().(*Envelope_UpdateSelfLocationResponse); ok {
		return x.UpdateSelfLocationResponse
	}
	return nil
}

func (x *Envelope) GetUseSkillRequest() *UseSkillRequest {
	if x, ok := x.GetPayload().(*Envelope_UseSkillRequest); ok {
		return x.UseSkillRequest
	}
	return nil
}

func (x *Envelope) GetUseSkillResponse() *UseSkillResponse {
	if x, ok := x.GetPayload().(*Envelope_UseSkillResponse); ok {
		return x.UseSkillResponse
	}
	return nil
}

func (x *Envelope) GetPickFallingObjectRequest() *PickFallingObjectRequest {
	if x, ok := x.GetPayload().(*Envelope_PickFallingObjectRequest); ok {
		return x.PickFallingObjectRequest
	}
	return nil
}

func (x *Envelope) GetPickFallingObjectResponse() *PickFallingObjectResponse {
	if x, ok := x.GetPayload().(*Envelope_PickFallingObjectResponse); ok {
		return x.PickFallingObjectResponse
	}
	return nil
}

func (x *Envelope) GetRespawnPlayerRequest() *RespawnPlayerRequest {
	if x, ok := x.GetPayload().(*Envelope_RespawnPlayerRequest); ok {
		return x.RespawnPlayerRequest
	}
	return nil
}

func (x *Envelope) GetRespawnPlayerResponse() *RespawnPlayerResponse {
	if x, ok := x.GetPayload().(*Envelope_RespawnPlayerResponse); ok {
		return x.RespawnPlayerResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastInitMapElementResponse() *BroadCastInitMapElementResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastInitMapElementResponse); ok {
		return x.BroadCastInitMapElementResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastMapEntityUpdateResponse() *BroadCastMapEntityUpdateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastMapEntityUpdateResponse); ok {
		return x.BroadCastMapEntityUpdateResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastEntityDestroyResponse() *BroadCastEntityDestroyResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastEntityDestroyResponse); ok {
		return x.BroadCastEntityDestroyResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastEntityMoveResponse() *BroadCastEntityMoveResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastEntityMoveResponse); ok {
		return x.BroadCastEntityMoveResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastEntityCombatResponse() *BroadCastEntityCombatResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastEntityCombatResponse); ok {
		return x.BroadCastEntityCombatResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastRespawnPlayerResponse() *BroadCastRespawnPlayerResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastRespawnPlayerResponse); ok {
		return x.BroadCastRespawnPlayerResponse
	}
	return nil
}

func (x *Envelope) GetTeleportRequest() *TeleportRequest {
	if x, ok := x.GetPayload().(*Envelope_TeleportRequest); ok {
		return x.TeleportRequest
	}
	return nil
}

func (x *Envelope) GetTeleportResponse() *TeleportResponse {
	if x, ok := x.GetPayload().(*Envelope_TeleportResponse); ok {
		return x.TeleportResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastEntityProfileUpdateResponse() *BroadCastEntityProfileUpdateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastEntityProfileUpdateResponse); ok {
		return x.BroadCastEntityProfileUpdateResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastMonsterDeathResponse() *BroadCastMonsterDeathResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastMonsterDeathResponse); ok {
		return x.BroadCastMonsterDeathResponse
	}
	return nil
}

func (x *Envelope) GetSelfTasksRequest() *SelfTasksRequest {
	if x, ok := x.GetPayload().(*Envelope_SelfTasksRequest); ok {
		return x.SelfTasksRequest
	}
	return nil
}

func (x *Envelope) GetSelfTasksResponse() *SelfTasksResponse {
	if x, ok := x.GetPayload().(*Envelope_SelfTasksResponse); ok {
		return x.SelfTasksResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastUpdateTaskListResponse() *BroadCastUpdateTaskListResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastUpdateTaskListResponse); ok {
		return x.BroadCastUpdateTaskListResponse
	}
	return nil
}

func (x *Envelope) GetAcceptTaskRequest() *AcceptTaskRequest {
	if x, ok := x.GetPayload().(*Envelope_AcceptTaskRequest); ok {
		return x.AcceptTaskRequest
	}
	return nil
}

func (x *Envelope) GetAcceptTaskResponse() *AcceptTaskResponse {
	if x, ok := x.GetPayload().(*Envelope_AcceptTaskResponse); ok {
		return x.AcceptTaskResponse
	}
	return nil
}

func (x *Envelope) GetAbandonmentTaskRequest() *AbandonmentTaskRequest {
	if x, ok := x.GetPayload().(*Envelope_AbandonmentTaskRequest); ok {
		return x.AbandonmentTaskRequest
	}
	return nil
}

func (x *Envelope) GetAbandonmentTaskResponse() *AbandonmentTaskResponse {
	if x, ok := x.GetPayload().(*Envelope_AbandonmentTaskResponse); ok {
		return x.AbandonmentTaskResponse
	}
	return nil
}

func (x *Envelope) GetTaskRewardRequest() *TaskRewardRequest {
	if x, ok := x.GetPayload().(*Envelope_TaskRewardRequest); ok {
		return x.TaskRewardRequest
	}
	return nil
}

func (x *Envelope) GetTaskRewardResponse() *TaskRewardResponse {
	if x, ok := x.GetPayload().(*Envelope_TaskRewardResponse); ok {
		return x.TaskRewardResponse
	}
	return nil
}

func (x *Envelope) GetTaskListRewardRequest() *TaskListRewardRequest {
	if x, ok := x.GetPayload().(*Envelope_TaskListRewardRequest); ok {
		return x.TaskListRewardRequest
	}
	return nil
}

func (x *Envelope) GetTaskListRewardResponse() *TaskListRewardResponse {
	if x, ok := x.GetPayload().(*Envelope_TaskListRewardResponse); ok {
		return x.TaskListRewardResponse
	}
	return nil
}

func (x *Envelope) GetUpgradeTaskProgressRequest() *UpgradeTaskProgressRequest {
	if x, ok := x.GetPayload().(*Envelope_UpgradeTaskProgressRequest); ok {
		return x.UpgradeTaskProgressRequest
	}
	return nil
}

func (x *Envelope) GetUpgradeTaskProgressResponse() *UpgradeTaskProgressResponse {
	if x, ok := x.GetPayload().(*Envelope_UpgradeTaskProgressResponse); ok {
		return x.UpgradeTaskProgressResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastTaskRewardResponse() *BroadCastTaskRewardResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastTaskRewardResponse); ok {
		return x.BroadCastTaskRewardResponse
	}
	return nil
}

func (x *Envelope) GetSendChatMessageRequest() *SendChatMessageRequest {
	if x, ok := x.GetPayload().(*Envelope_SendChatMessageRequest); ok {
		return x.SendChatMessageRequest
	}
	return nil
}

func (x *Envelope) GetSendChatMessageResponse() *SendChatMessageResponse {
	if x, ok := x.GetPayload().(*Envelope_SendChatMessageResponse); ok {
		return x.SendChatMessageResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastChatMessagesResponse() *BroadCastChatMessagesResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastChatMessagesResponse); ok {
		return x.BroadCastChatMessagesResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastRemoveChatMessageResponse() *BroadCastRemoveChatMessageResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastRemoveChatMessageResponse); ok {
		return x.BroadCastRemoveChatMessageResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastUpdateChatStateResponse() *BroadCastUpdateChatStateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastUpdateChatStateResponse); ok {
		return x.BroadCastUpdateChatStateResponse
	}
	return nil
}

func (x *Envelope) GetPingRequest() *PingRequest {
	if x, ok := x.GetPayload().(*Envelope_PingRequest); ok {
		return x.PingRequest
	}
	return nil
}

func (x *Envelope) GetPingResponse() *PingResponse {
	if x, ok := x.GetPayload().(*Envelope_PingResponse); ok {
		return x.PingResponse
	}
	return nil
}

type isEnvelope_Payload interface {
	isEnvelope_Payload()
}

type Envelope_ItemGetRequest struct {
	//mainServer协议 : 0x01ZZZZ  主数据服务协议************************************
	ItemGetRequest *ItemGetRequest `protobuf:"bytes,65537,opt,name=item_get_request,json=itemGetRequest,proto3,oneof"`
}

type Envelope_ItemGetResponse struct {
	ItemGetResponse *ItemGetResponse `protobuf:"bytes,65538,opt,name=item_get_response,json=itemGetResponse,proto3,oneof"`
}

type Envelope_ItemUseRequest struct {
	ItemUseRequest *ItemUseRequest `protobuf:"bytes,65539,opt,name=item_use_request,json=itemUseRequest,proto3,oneof"`
}

type Envelope_ItemUseResponse struct {
	ItemUseResponse *ItemUseResponse `protobuf:"bytes,65540,opt,name=item_use_response,json=itemUseResponse,proto3,oneof"`
}

type Envelope_ItemDropRequest struct {
	ItemDropRequest *ItemDropRequest `protobuf:"bytes,65541,opt,name=item_drop_request,json=itemDropRequest,proto3,oneof"`
}

type Envelope_ItemDropResponse struct {
	ItemDropResponse *ItemDropResponse `protobuf:"bytes,65542,opt,name=item_drop_response,json=itemDropResponse,proto3,oneof"`
}

type Envelope_UpdateAvatarRequest struct {
	UpdateAvatarRequest *UpdateAvatarRequest `protobuf:"bytes,65543,opt,name=update_avatar_request,json=updateAvatarRequest,proto3,oneof"`
}

type Envelope_UpdateAvatarResponse struct {
	UpdateAvatarResponse *UpdateAvatarResponse `protobuf:"bytes,65544,opt,name=update_avatar_response,json=updateAvatarResponse,proto3,oneof"`
}

type Envelope_UnloadAvatarRequest struct {
	UnloadAvatarRequest *UnloadAvatarRequest `protobuf:"bytes,65545,opt,name=unload_avatar_request,json=unloadAvatarRequest,proto3,oneof"`
}

type Envelope_UnloadAvatarResponse struct {
	UnloadAvatarResponse *UnloadAvatarResponse `protobuf:"bytes,65552,opt,name=unload_avatar_response,json=unloadAvatarResponse,proto3,oneof"`
}

type Envelope_BroadCastItemAddResponse struct {
	BroadCastItemAddResponse *BroadCastItemAddResponse `protobuf:"bytes,65553,opt,name=broad_cast_item_add_response,json=broadCastItemAddResponse,proto3,oneof"`
}

type Envelope_BroadCastItemUpdateResponse struct {
	BroadCastItemUpdateResponse *BroadCastItemUpdateResponse `protobuf:"bytes,65554,opt,name=broad_cast_item_update_response,json=broadCastItemUpdateResponse,proto3,oneof"`
}

type Envelope_BroadCastItemDelResponse struct {
	BroadCastItemDelResponse *BroadCastItemDelResponse `protobuf:"bytes,65555,opt,name=broad_cast_item_del_response,json=broadCastItemDelResponse,proto3,oneof"`
}

type Envelope_BroadCastUpdateItemSlotResponse struct {
	BroadCastUpdateItemSlotResponse *BroadCastUpdateItemSlotResponse `protobuf:"bytes,65556,opt,name=broad_cast_update_item_slot_response,json=broadCastUpdateItemSlotResponse,proto3,oneof"`
}

type Envelope_GetItemSlotRequest struct {
	GetItemSlotRequest *GetItemSlotRequest `protobuf:"bytes,65557,opt,name=get_item_slot_request,json=getItemSlotRequest,proto3,oneof"`
}

type Envelope_GetItemSlotResponse struct {
	GetItemSlotResponse *GetItemSlotResponse `protobuf:"bytes,65558,opt,name=get_item_slot_response,json=getItemSlotResponse,proto3,oneof"`
}

type Envelope_UpgradeItemSlotRequest struct {
	UpgradeItemSlotRequest *UpgradeItemSlotRequest `protobuf:"bytes,65559,opt,name=upgrade_item_slot_request,json=upgradeItemSlotRequest,proto3,oneof"`
}

type Envelope_UpgradeItemSlotResponse struct {
	UpgradeItemSlotResponse *UpgradeItemSlotResponse `protobuf:"bytes,65560,opt,name=upgrade_item_slot_response,json=upgradeItemSlotResponse,proto3,oneof"`
}

type Envelope_SigninPlayerRequest struct {
	SigninPlayerRequest *SigninPlayerRequest `protobuf:"bytes,65561,opt,name=signin_player_request,json=signinPlayerRequest,proto3,oneof"`
}

type Envelope_SigninPlayerResponse struct {
	SigninPlayerResponse *SigninPlayerResponse `protobuf:"bytes,65568,opt,name=signin_player_response,json=signinPlayerResponse,proto3,oneof"`
}

type Envelope_SignOutPlayerRequest struct {
	SignOutPlayerRequest *SignOutPlayerRequest `protobuf:"bytes,65569,opt,name=sign_out_player_request,json=signOutPlayerRequest,proto3,oneof"`
}

type Envelope_SignOutPlayerResponse struct {
	SignOutPlayerResponse *SignOutPlayerResponse `protobuf:"bytes,65570,opt,name=sign_out_player_response,json=signOutPlayerResponse,proto3,oneof"`
}

type Envelope_UpgradePlayerLevelRequest struct {
	UpgradePlayerLevelRequest *UpgradePlayerLevelRequest `protobuf:"bytes,65571,opt,name=upgrade_player_level_request,json=upgradePlayerLevelRequest,proto3,oneof"`
}

type Envelope_UpgradePlayerLevelResponse struct {
	UpgradePlayerLevelResponse *UpgradePlayerLevelResponse `protobuf:"bytes,65572,opt,name=upgrade_player_level_response,json=upgradePlayerLevelResponse,proto3,oneof"`
}

type Envelope_QueryPlayerRequest struct {
	//accountSer协议 : 0x02ZZZZ  账号服务 协议 ************************************
	QueryPlayerRequest *QueryPlayerRequest `protobuf:"bytes,131073,opt,name=query_player_request,json=queryPlayerRequest,proto3,oneof"`
}

type Envelope_QueryPlayerResponse struct {
	QueryPlayerResponse *QueryPlayerResponse `protobuf:"bytes,131074,opt,name=query_player_response,json=queryPlayerResponse,proto3,oneof"`
}

type Envelope_CreatePlayerRequest struct {
	CreatePlayerRequest *CreatePlayerRequest `protobuf:"bytes,131075,opt,name=create_player_request,json=createPlayerRequest,proto3,oneof"`
}

type Envelope_CreatePlayerResponse struct {
	CreatePlayerResponse *CreatePlayerResponse `protobuf:"bytes,131076,opt,name=create_player_response,json=createPlayerResponse,proto3,oneof"`
}

type Envelope_EnterMapRequest struct {
	//screenSer 协议 : 0x03ZZZZ  战斗服务 协议 ************************************
	EnterMapRequest *EnterMapRequest `protobuf:"bytes,196609,opt,name=enter_map_request,json=enterMapRequest,proto3,oneof"`
}

type Envelope_EnterMapResponse struct {
	EnterMapResponse *EnterMapResponse `protobuf:"bytes,196610,opt,name=enter_map_response,json=enterMapResponse,proto3,oneof"`
}

type Envelope_UpdateSelfLocationRequest struct {
	UpdateSelfLocationRequest *UpdateSelfLocationRequest `protobuf:"bytes,196611,opt,name=update_self_location_request,json=updateSelfLocationRequest,proto3,oneof"`
}

type Envelope_UpdateSelfLocationResponse struct {
	UpdateSelfLocationResponse *UpdateSelfLocationResponse `protobuf:"bytes,196612,opt,name=update_self_location_response,json=updateSelfLocationResponse,proto3,oneof"`
}

type Envelope_UseSkillRequest struct {
	UseSkillRequest *UseSkillRequest `protobuf:"bytes,196613,opt,name=use_skill_request,json=useSkillRequest,proto3,oneof"`
}

type Envelope_UseSkillResponse struct {
	UseSkillResponse *UseSkillResponse `protobuf:"bytes,196614,opt,name=use_skill_response,json=useSkillResponse,proto3,oneof"`
}

type Envelope_PickFallingObjectRequest struct {
	PickFallingObjectRequest *PickFallingObjectRequest `protobuf:"bytes,196615,opt,name=pick_falling_object_request,json=pickFallingObjectRequest,proto3,oneof"`
}

type Envelope_PickFallingObjectResponse struct {
	PickFallingObjectResponse *PickFallingObjectResponse `protobuf:"bytes,196616,opt,name=pick_falling_object_response,json=pickFallingObjectResponse,proto3,oneof"`
}

type Envelope_RespawnPlayerRequest struct {
	RespawnPlayerRequest *RespawnPlayerRequest `protobuf:"bytes,196617,opt,name=respawn_player_request,json=respawnPlayerRequest,proto3,oneof"`
}

type Envelope_RespawnPlayerResponse struct {
	RespawnPlayerResponse *RespawnPlayerResponse `protobuf:"bytes,196624,opt,name=respawn_player_response,json=respawnPlayerResponse,proto3,oneof"`
}

type Envelope_BroadCastInitMapElementResponse struct {
	BroadCastInitMapElementResponse *BroadCastInitMapElementResponse `protobuf:"bytes,196625,opt,name=broad_cast_init_map_element_response,json=broadCastInitMapElementResponse,proto3,oneof"`
}

type Envelope_BroadCastMapEntityUpdateResponse struct {
	BroadCastMapEntityUpdateResponse *BroadCastMapEntityUpdateResponse `protobuf:"bytes,196626,opt,name=broad_cast_map_entity_update_response,json=broadCastMapEntityUpdateResponse,proto3,oneof"`
}

type Envelope_BroadCastEntityDestroyResponse struct {
	BroadCastEntityDestroyResponse *BroadCastEntityDestroyResponse `protobuf:"bytes,196627,opt,name=broad_cast_entity_destroy_response,json=broadCastEntityDestroyResponse,proto3,oneof"`
}

type Envelope_BroadCastEntityMoveResponse struct {
	BroadCastEntityMoveResponse *BroadCastEntityMoveResponse `protobuf:"bytes,196628,opt,name=broad_cast_entity_move_response,json=broadCastEntityMoveResponse,proto3,oneof"`
}

type Envelope_BroadCastEntityCombatResponse struct {
	BroadCastEntityCombatResponse *BroadCastEntityCombatResponse `protobuf:"bytes,196629,opt,name=broad_cast_entity_combat_response,json=broadCastEntityCombatResponse,proto3,oneof"`
}

type Envelope_BroadCastRespawnPlayerResponse struct {
	BroadCastRespawnPlayerResponse *BroadCastRespawnPlayerResponse `protobuf:"bytes,196630,opt,name=broad_cast_respawn_player_response,json=broadCastRespawnPlayerResponse,proto3,oneof"`
}

type Envelope_TeleportRequest struct {
	TeleportRequest *TeleportRequest `protobuf:"bytes,196631,opt,name=teleport_request,json=teleportRequest,proto3,oneof"`
}

type Envelope_TeleportResponse struct {
	TeleportResponse *TeleportResponse `protobuf:"bytes,196632,opt,name=teleport_response,json=teleportResponse,proto3,oneof"`
}

type Envelope_BroadCastEntityProfileUpdateResponse struct {
	BroadCastEntityProfileUpdateResponse *BroadCastEntityProfileUpdateResponse `protobuf:"bytes,196633,opt,name=broad_cast_entity_profile_update_response,json=broadCastEntityProfileUpdateResponse,proto3,oneof"`
}

type Envelope_BroadCastMonsterDeathResponse struct {
	BroadCastMonsterDeathResponse *BroadCastMonsterDeathResponse `protobuf:"bytes,196641,opt,name=broad_cast_monster_death_response,json=broadCastMonsterDeathResponse,proto3,oneof"`
}

type Envelope_SelfTasksRequest struct {
	//taskServer协议 : 0x04ZZZZ  任务服务 协议 ************************************
	SelfTasksRequest *SelfTasksRequest `protobuf:"bytes,262145,opt,name=self_tasks_request,json=selfTasksRequest,proto3,oneof"`
}

type Envelope_SelfTasksResponse struct {
	SelfTasksResponse *SelfTasksResponse `protobuf:"bytes,262146,opt,name=self_tasks_response,json=selfTasksResponse,proto3,oneof"`
}

type Envelope_BroadCastUpdateTaskListResponse struct {
	BroadCastUpdateTaskListResponse *BroadCastUpdateTaskListResponse `protobuf:"bytes,262147,opt,name=broad_cast_update_task_list_response,json=broadCastUpdateTaskListResponse,proto3,oneof"`
}

type Envelope_AcceptTaskRequest struct {
	AcceptTaskRequest *AcceptTaskRequest `protobuf:"bytes,262148,opt,name=accept_task_request,json=acceptTaskRequest,proto3,oneof"`
}

type Envelope_AcceptTaskResponse struct {
	AcceptTaskResponse *AcceptTaskResponse `protobuf:"bytes,262149,opt,name=accept_task_response,json=acceptTaskResponse,proto3,oneof"`
}

type Envelope_AbandonmentTaskRequest struct {
	AbandonmentTaskRequest *AbandonmentTaskRequest `protobuf:"bytes,262150,opt,name=abandonment_task_request,json=abandonmentTaskRequest,proto3,oneof"`
}

type Envelope_AbandonmentTaskResponse struct {
	AbandonmentTaskResponse *AbandonmentTaskResponse `protobuf:"bytes,262151,opt,name=abandonment_task_response,json=abandonmentTaskResponse,proto3,oneof"`
}

type Envelope_TaskRewardRequest struct {
	TaskRewardRequest *TaskRewardRequest `protobuf:"bytes,262152,opt,name=task_reward_request,json=taskRewardRequest,proto3,oneof"`
}

type Envelope_TaskRewardResponse struct {
	TaskRewardResponse *TaskRewardResponse `protobuf:"bytes,262153,opt,name=task_reward_response,json=taskRewardResponse,proto3,oneof"`
}

type Envelope_TaskListRewardRequest struct {
	TaskListRewardRequest *TaskListRewardRequest `protobuf:"bytes,262160,opt,name=task_list_reward_request,json=taskListRewardRequest,proto3,oneof"`
}

type Envelope_TaskListRewardResponse struct {
	TaskListRewardResponse *TaskListRewardResponse `protobuf:"bytes,262161,opt,name=task_list_reward_response,json=taskListRewardResponse,proto3,oneof"`
}

type Envelope_UpgradeTaskProgressRequest struct {
	UpgradeTaskProgressRequest *UpgradeTaskProgressRequest `protobuf:"bytes,262162,opt,name=upgrade_task_progress_request,json=upgradeTaskProgressRequest,proto3,oneof"`
}

type Envelope_UpgradeTaskProgressResponse struct {
	UpgradeTaskProgressResponse *UpgradeTaskProgressResponse `protobuf:"bytes,262163,opt,name=upgrade_task_progress_response,json=upgradeTaskProgressResponse,proto3,oneof"`
}

type Envelope_BroadCastTaskRewardResponse struct {
	BroadCastTaskRewardResponse *BroadCastTaskRewardResponse `protobuf:"bytes,262164,opt,name=broad_cast_task_reward_response,json=broadCastTaskRewardResponse,proto3,oneof"`
}

type Envelope_SendChatMessageRequest struct {
	//chatServer协议 : 0x05ZZZZ  聊天服务 协议 ************************************
	SendChatMessageRequest *SendChatMessageRequest `protobuf:"bytes,5308417,opt,name=send_chat_message_request,json=sendChatMessageRequest,proto3,oneof"`
}

type Envelope_SendChatMessageResponse struct {
	SendChatMessageResponse *SendChatMessageResponse `protobuf:"bytes,5308418,opt,name=send_chat_message_response,json=sendChatMessageResponse,proto3,oneof"`
}

type Envelope_BroadCastChatMessagesResponse struct {
	BroadCastChatMessagesResponse *BroadCastChatMessagesResponse `protobuf:"bytes,5308419,opt,name=broad_cast_chat_messages_response,json=broadCastChatMessagesResponse,proto3,oneof"`
}

type Envelope_BroadCastRemoveChatMessageResponse struct {
	BroadCastRemoveChatMessageResponse *BroadCastRemoveChatMessageResponse `protobuf:"bytes,5308420,opt,name=broad_cast_remove_chat_message_response,json=broadCastRemoveChatMessageResponse,proto3,oneof"`
}

type Envelope_BroadCastUpdateChatStateResponse struct {
	BroadCastUpdateChatStateResponse *BroadCastUpdateChatStateResponse `protobuf:"bytes,5308421,opt,name=broad_cast_update_chat_state_response,json=broadCastUpdateChatStateResponse,proto3,oneof"`
}

type Envelope_PingRequest struct {
	//getaway   协议 : 0x06ZZZZ  网关服务 协议 ************************************
	PingRequest *PingRequest `protobuf:"bytes,393217,opt,name=ping_request,json=pingRequest,proto3,oneof"`
}

type Envelope_PingResponse struct {
	PingResponse *PingResponse `protobuf:"bytes,393218,opt,name=ping_response,json=pingResponse,proto3,oneof"`
}

func (*Envelope_ItemGetRequest) isEnvelope_Payload() {}

func (*Envelope_ItemGetResponse) isEnvelope_Payload() {}

func (*Envelope_ItemUseRequest) isEnvelope_Payload() {}

func (*Envelope_ItemUseResponse) isEnvelope_Payload() {}

func (*Envelope_ItemDropRequest) isEnvelope_Payload() {}

func (*Envelope_ItemDropResponse) isEnvelope_Payload() {}

func (*Envelope_UpdateAvatarRequest) isEnvelope_Payload() {}

func (*Envelope_UpdateAvatarResponse) isEnvelope_Payload() {}

func (*Envelope_UnloadAvatarRequest) isEnvelope_Payload() {}

func (*Envelope_UnloadAvatarResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastItemAddResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastItemUpdateResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastItemDelResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastUpdateItemSlotResponse) isEnvelope_Payload() {}

func (*Envelope_GetItemSlotRequest) isEnvelope_Payload() {}

func (*Envelope_GetItemSlotResponse) isEnvelope_Payload() {}

func (*Envelope_UpgradeItemSlotRequest) isEnvelope_Payload() {}

func (*Envelope_UpgradeItemSlotResponse) isEnvelope_Payload() {}

func (*Envelope_SigninPlayerRequest) isEnvelope_Payload() {}

func (*Envelope_SigninPlayerResponse) isEnvelope_Payload() {}

func (*Envelope_SignOutPlayerRequest) isEnvelope_Payload() {}

func (*Envelope_SignOutPlayerResponse) isEnvelope_Payload() {}

func (*Envelope_UpgradePlayerLevelRequest) isEnvelope_Payload() {}

func (*Envelope_UpgradePlayerLevelResponse) isEnvelope_Payload() {}

func (*Envelope_QueryPlayerRequest) isEnvelope_Payload() {}

func (*Envelope_QueryPlayerResponse) isEnvelope_Payload() {}

func (*Envelope_CreatePlayerRequest) isEnvelope_Payload() {}

func (*Envelope_CreatePlayerResponse) isEnvelope_Payload() {}

func (*Envelope_EnterMapRequest) isEnvelope_Payload() {}

func (*Envelope_EnterMapResponse) isEnvelope_Payload() {}

func (*Envelope_UpdateSelfLocationRequest) isEnvelope_Payload() {}

func (*Envelope_UpdateSelfLocationResponse) isEnvelope_Payload() {}

func (*Envelope_UseSkillRequest) isEnvelope_Payload() {}

func (*Envelope_UseSkillResponse) isEnvelope_Payload() {}

func (*Envelope_PickFallingObjectRequest) isEnvelope_Payload() {}

func (*Envelope_PickFallingObjectResponse) isEnvelope_Payload() {}

func (*Envelope_RespawnPlayerRequest) isEnvelope_Payload() {}

func (*Envelope_RespawnPlayerResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastInitMapElementResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastMapEntityUpdateResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastEntityDestroyResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastEntityMoveResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastEntityCombatResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastRespawnPlayerResponse) isEnvelope_Payload() {}

func (*Envelope_TeleportRequest) isEnvelope_Payload() {}

func (*Envelope_TeleportResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastEntityProfileUpdateResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastMonsterDeathResponse) isEnvelope_Payload() {}

func (*Envelope_SelfTasksRequest) isEnvelope_Payload() {}

func (*Envelope_SelfTasksResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastUpdateTaskListResponse) isEnvelope_Payload() {}

func (*Envelope_AcceptTaskRequest) isEnvelope_Payload() {}

func (*Envelope_AcceptTaskResponse) isEnvelope_Payload() {}

func (*Envelope_AbandonmentTaskRequest) isEnvelope_Payload() {}

func (*Envelope_AbandonmentTaskResponse) isEnvelope_Payload() {}

func (*Envelope_TaskRewardRequest) isEnvelope_Payload() {}

func (*Envelope_TaskRewardResponse) isEnvelope_Payload() {}

func (*Envelope_TaskListRewardRequest) isEnvelope_Payload() {}

func (*Envelope_TaskListRewardResponse) isEnvelope_Payload() {}

func (*Envelope_UpgradeTaskProgressRequest) isEnvelope_Payload() {}

func (*Envelope_UpgradeTaskProgressResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastTaskRewardResponse) isEnvelope_Payload() {}

func (*Envelope_SendChatMessageRequest) isEnvelope_Payload() {}

func (*Envelope_SendChatMessageResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastChatMessagesResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastRemoveChatMessageResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastUpdateChatStateResponse) isEnvelope_Payload() {}

func (*Envelope_PingRequest) isEnvelope_Payload() {}

func (*Envelope_PingResponse) isEnvelope_Payload() {}

//mainServer协议 : 0x01ZZZZ  主数据服务协议************************************
type ItemGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ItemGetRequest) Reset() {
	*x = ItemGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemGetRequest) ProtoMessage() {}

func (x *ItemGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemGetRequest.ProtoReflect.Descriptor instead.
func (*ItemGetRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{1}
}

type ItemGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ItemGetResponse) Reset() {
	*x = ItemGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemGetResponse) ProtoMessage() {}

func (x *ItemGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemGetResponse.ProtoReflect.Descriptor instead.
func (*ItemGetResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{2}
}

func (x *ItemGetResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type ItemUseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` // 使用的道具 id
}

func (x *ItemUseRequest) Reset() {
	*x = ItemUseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUseRequest) ProtoMessage() {}

func (x *ItemUseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUseRequest.ProtoReflect.Descriptor instead.
func (*ItemUseRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{3}
}

func (x *ItemUseRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type ItemUseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ItemUseResponse) Reset() {
	*x = ItemUseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUseResponse) ProtoMessage() {}

func (x *ItemUseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUseResponse.ProtoReflect.Descriptor instead.
func (*ItemUseResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{4}
}

type ItemDropRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Num    int32  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *ItemDropRequest) Reset() {
	*x = ItemDropRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemDropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemDropRequest) ProtoMessage() {}

func (x *ItemDropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemDropRequest.ProtoReflect.Descriptor instead.
func (*ItemDropRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{5}
}

func (x *ItemDropRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ItemDropRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type ItemDropResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ItemDropResponse) Reset() {
	*x = ItemDropResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemDropResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemDropResponse) ProtoMessage() {}

func (x *ItemDropResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemDropResponse.ProtoReflect.Descriptor instead.
func (*ItemDropResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{6}
}

// 穿装备
type UpdateAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   string         `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Position AvatarPosition `protobuf:"varint,2,opt,name=position,proto3,enum=gameMessageCore.AvatarPosition" json:"position,omitempty"` // 装备的位置
}

func (x *UpdateAvatarRequest) Reset() {
	*x = UpdateAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvatarRequest) ProtoMessage() {}

func (x *UpdateAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvatarRequest.ProtoReflect.Descriptor instead.
func (*UpdateAvatarRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAvatarRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *UpdateAvatarRequest) GetPosition() AvatarPosition {
	if x != nil {
		return x.Position
	}
	return AvatarPosition_AvatarPositionNone
}

type UpdateAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAvatarResponse) Reset() {
	*x = UpdateAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvatarResponse) ProtoMessage() {}

func (x *UpdateAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvatarResponse.ProtoReflect.Descriptor instead.
func (*UpdateAvatarResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{8}
}

// 卸下装备
type UnloadAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *UnloadAvatarRequest) Reset() {
	*x = UnloadAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnloadAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadAvatarRequest) ProtoMessage() {}

func (x *UnloadAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadAvatarRequest.ProtoReflect.Descriptor instead.
func (*UnloadAvatarRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{9}
}

func (x *UnloadAvatarRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type UnloadAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnloadAvatarResponse) Reset() {
	*x = UnloadAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnloadAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadAvatarResponse) ProtoMessage() {}

func (x *UnloadAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadAvatarResponse.ProtoReflect.Descriptor instead.
func (*UnloadAvatarResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{10}
}

type BroadCastItemAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BroadCastItemAddResponse) Reset() {
	*x = BroadCastItemAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastItemAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastItemAddResponse) ProtoMessage() {}

func (x *BroadCastItemAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastItemAddResponse.ProtoReflect.Descriptor instead.
func (*BroadCastItemAddResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{11}
}

func (x *BroadCastItemAddResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type BroadCastItemUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BroadCastItemUpdateResponse) Reset() {
	*x = BroadCastItemUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastItemUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastItemUpdateResponse) ProtoMessage() {}

func (x *BroadCastItemUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastItemUpdateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastItemUpdateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{12}
}

func (x *BroadCastItemUpdateResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type BroadCastItemDelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BroadCastItemDelResponse) Reset() {
	*x = BroadCastItemDelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastItemDelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastItemDelResponse) ProtoMessage() {}

func (x *BroadCastItemDelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastItemDelResponse.ProtoReflect.Descriptor instead.
func (*BroadCastItemDelResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{13}
}

func (x *BroadCastItemDelResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type BroadCastUpdateItemSlotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slots []*ItemSlot `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *BroadCastUpdateItemSlotResponse) Reset() {
	*x = BroadCastUpdateItemSlotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastUpdateItemSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastUpdateItemSlotResponse) ProtoMessage() {}

func (x *BroadCastUpdateItemSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastUpdateItemSlotResponse.ProtoReflect.Descriptor instead.
func (*BroadCastUpdateItemSlotResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{14}
}

func (x *BroadCastUpdateItemSlotResponse) GetSlots() []*ItemSlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type GetItemSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetItemSlotRequest) Reset() {
	*x = GetItemSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemSlotRequest) ProtoMessage() {}

func (x *GetItemSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemSlotRequest.ProtoReflect.Descriptor instead.
func (*GetItemSlotRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{15}
}

type GetItemSlotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slots []*ItemSlot `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *GetItemSlotResponse) Reset() {
	*x = GetItemSlotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemSlotResponse) ProtoMessage() {}

func (x *GetItemSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemSlotResponse.ProtoReflect.Descriptor instead.
func (*GetItemSlotResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{16}
}

func (x *GetItemSlotResponse) GetSlots() []*ItemSlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type UpgradeItemSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position AvatarPosition `protobuf:"varint,1,opt,name=position,proto3,enum=gameMessageCore.AvatarPosition" json:"position,omitempty"`
}

func (x *UpgradeItemSlotRequest) Reset() {
	*x = UpgradeItemSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeItemSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeItemSlotRequest) ProtoMessage() {}

func (x *UpgradeItemSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeItemSlotRequest.ProtoReflect.Descriptor instead.
func (*UpgradeItemSlotRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{17}
}

func (x *UpgradeItemSlotRequest) GetPosition() AvatarPosition {
	if x != nil {
		return x.Position
	}
	return AvatarPosition_AvatarPositionNone
}

type UpgradeItemSlotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slots []*ItemSlot `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *UpgradeItemSlotResponse) Reset() {
	*x = UpgradeItemSlotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeItemSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeItemSlotResponse) ProtoMessage() {}

func (x *UpgradeItemSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeItemSlotResponse.ProtoReflect.Descriptor instead.
func (*UpgradeItemSlotResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{18}
}

func (x *UpgradeItemSlotResponse) GetSlots() []*ItemSlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type SigninPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64        `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Token      string       `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"` // token校验信息
	ClientTime int64        `protobuf:"varint,3,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"`
	Reconnect  bool         `protobuf:"varint,4,opt,name=reconnect,proto3" json:"reconnect,omitempty"`
	OsType     OSType       `protobuf:"varint,5,opt,name=os_type,json=osType,proto3,enum=gameMessageCore.OSType" json:"os_type,omitempty"` // 渠道(android/ios)
	Platform   PlatformType `protobuf:"varint,6,opt,name=platform,proto3,enum=gameMessageCore.PlatformType" json:"platform,omitempty"`     // 平台(taptap...)
	// 客户端期望链接的scene_service_app_id,仅在开发模式有效
	SceneServiceAppId string `protobuf:"bytes,7,opt,name=scene_service_app_id,json=sceneServiceAppId,proto3" json:"scene_service_app_id,omitempty"`
}

func (x *SigninPlayerRequest) Reset() {
	*x = SigninPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigninPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigninPlayerRequest) ProtoMessage() {}

func (x *SigninPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigninPlayerRequest.ProtoReflect.Descriptor instead.
func (*SigninPlayerRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{19}
}

func (x *SigninPlayerRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SigninPlayerRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SigninPlayerRequest) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

func (x *SigninPlayerRequest) GetReconnect() bool {
	if x != nil {
		return x.Reconnect
	}
	return false
}

func (x *SigninPlayerRequest) GetOsType() OSType {
	if x != nil {
		return x.OsType
	}
	return OSType_OSTypeUnknow
}

func (x *SigninPlayerRequest) GetPlatform() PlatformType {
	if x != nil {
		return x.Platform
	}
	return PlatformType_PlatformUnKnow
}

func (x *SigninPlayerRequest) GetSceneServiceAppId() string {
	if x != nil {
		return x.SceneServiceAppId
	}
	return ""
}

type SigninPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player            *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"` // 玩家信息
	ServerTime        int64   `protobuf:"varint,2,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	ClientTime        int64   `protobuf:"varint,3,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"`
	SceneServiceAppId string  `protobuf:"bytes,4,opt,name=scene_service_app_id,json=sceneServiceAppId,proto3" json:"scene_service_app_id,omitempty"`
	LastLoginTime     int64   `protobuf:"varint,5,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"` //上次登录banner的时间
}

func (x *SigninPlayerResponse) Reset() {
	*x = SigninPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigninPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigninPlayerResponse) ProtoMessage() {}

func (x *SigninPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigninPlayerResponse.ProtoReflect.Descriptor instead.
func (*SigninPlayerResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{20}
}

func (x *SigninPlayerResponse) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *SigninPlayerResponse) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *SigninPlayerResponse) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

func (x *SigninPlayerResponse) GetSceneServiceAppId() string {
	if x != nil {
		return x.SceneServiceAppId
	}
	return ""
}

func (x *SigninPlayerResponse) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

type SignOutPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignOutPlayerRequest) Reset() {
	*x = SignOutPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOutPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOutPlayerRequest) ProtoMessage() {}

func (x *SignOutPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOutPlayerRequest.ProtoReflect.Descriptor instead.
func (*SignOutPlayerRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{21}
}

type SignOutPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignOutPlayerResponse) Reset() {
	*x = SignOutPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOutPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOutPlayerResponse) ProtoMessage() {}

func (x *SignOutPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOutPlayerResponse.ProtoReflect.Descriptor instead.
func (*SignOutPlayerResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{22}
}

type BroadCastEntityProfileUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId *EntityId              `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Profiles []*EntityProfileUpdate `protobuf:"bytes,2,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *BroadCastEntityProfileUpdateResponse) Reset() {
	*x = BroadCastEntityProfileUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastEntityProfileUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastEntityProfileUpdateResponse) ProtoMessage() {}

func (x *BroadCastEntityProfileUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastEntityProfileUpdateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastEntityProfileUpdateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{23}
}

func (x *BroadCastEntityProfileUpdateResponse) GetEntityId() *EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *BroadCastEntityProfileUpdateResponse) GetProfiles() []*EntityProfileUpdate {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type BroadCastMonsterDeathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId     int32           `protobuf:"varint,1,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	MonsterId int64           `protobuf:"varint,2,opt,name=monster_id,json=monsterId,proto3" json:"monster_id,omitempty"`
	Cid       int32           `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
	Pos       *Vector3        `protobuf:"bytes,4,opt,name=pos,proto3" json:"pos,omitempty"`
	DropList  []*ItemBaseInfo `protobuf:"bytes,5,rep,name=drop_list,json=dropList,proto3" json:"drop_list,omitempty"`
}

func (x *BroadCastMonsterDeathResponse) Reset() {
	*x = BroadCastMonsterDeathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastMonsterDeathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastMonsterDeathResponse) ProtoMessage() {}

func (x *BroadCastMonsterDeathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastMonsterDeathResponse.ProtoReflect.Descriptor instead.
func (*BroadCastMonsterDeathResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{24}
}

func (x *BroadCastMonsterDeathResponse) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *BroadCastMonsterDeathResponse) GetMonsterId() int64 {
	if x != nil {
		return x.MonsterId
	}
	return 0
}

func (x *BroadCastMonsterDeathResponse) GetCid() int32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *BroadCastMonsterDeathResponse) GetPos() *Vector3 {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *BroadCastMonsterDeathResponse) GetDropList() []*ItemBaseInfo {
	if x != nil {
		return x.DropList
	}
	return nil
}

type UpgradePlayerLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpgradePlayerLevelRequest) Reset() {
	*x = UpgradePlayerLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradePlayerLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradePlayerLevelRequest) ProtoMessage() {}

func (x *UpgradePlayerLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradePlayerLevelRequest.ProtoReflect.Descriptor instead.
func (*UpgradePlayerLevelRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{25}
}

type UpgradePlayerLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurLevel int32 `protobuf:"varint,1,opt,name=cur_level,json=curLevel,proto3" json:"cur_level,omitempty"`
	CurExp   int64 `protobuf:"varint,2,opt,name=cur_exp,json=curExp,proto3" json:"cur_exp,omitempty"`
}

func (x *UpgradePlayerLevelResponse) Reset() {
	*x = UpgradePlayerLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradePlayerLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradePlayerLevelResponse) ProtoMessage() {}

func (x *UpgradePlayerLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradePlayerLevelResponse.ProtoReflect.Descriptor instead.
func (*UpgradePlayerLevelResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{26}
}

func (x *UpgradePlayerLevelResponse) GetCurLevel() int32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

func (x *UpgradePlayerLevelResponse) GetCurExp() int64 {
	if x != nil {
		return x.CurExp
	}
	return 0
}

//accountSer协议 : 0x02ZZZZ  账号服务 协议 ************************************
type QueryPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *QueryPlayerRequest) Reset() {
	*x = QueryPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlayerRequest) ProtoMessage() {}

func (x *QueryPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPlayerRequest.ProtoReflect.Descriptor instead.
func (*QueryPlayerRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{27}
}

func (x *QueryPlayerRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type QueryPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player *PlayerBaseData `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"` // 玩家信息
}

func (x *QueryPlayerResponse) Reset() {
	*x = QueryPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlayerResponse) ProtoMessage() {}

func (x *QueryPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPlayerResponse.ProtoReflect.Descriptor instead.
func (*QueryPlayerResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{28}
}

func (x *QueryPlayerResponse) GetPlayer() *PlayerBaseData {
	if x != nil {
		return x.Player
	}
	return nil
}

type CreatePlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string         `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	NickName string         `protobuf:"bytes,2,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`                        // 名字
	RoleId   int32          `protobuf:"varint,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`                             // 配置 ID
	Gender   string         `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`                                            // 玩家性别，男生为 male, 女生为 female
	Icon     string         `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`                                                //角色头像
	Feature  *PlayerFeature `protobuf:"bytes,6,opt,name=feature,proto3" json:"feature,omitempty"`                                          // 容貌数据
	OsType   OSType         `protobuf:"varint,7,opt,name=os_type,json=osType,proto3,enum=gameMessageCore.OSType" json:"os_type,omitempty"` // 渠道(android/ios)
	Platform PlatformType   `protobuf:"varint,8,opt,name=platform,proto3,enum=gameMessageCore.PlatformType" json:"platform,omitempty"`     // 平台(taptap...)
}

func (x *CreatePlayerRequest) Reset() {
	*x = CreatePlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlayerRequest) ProtoMessage() {}

func (x *CreatePlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlayerRequest.ProtoReflect.Descriptor instead.
func (*CreatePlayerRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{29}
}

func (x *CreatePlayerRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreatePlayerRequest) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *CreatePlayerRequest) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *CreatePlayerRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *CreatePlayerRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CreatePlayerRequest) GetFeature() *PlayerFeature {
	if x != nil {
		return x.Feature
	}
	return nil
}

func (x *CreatePlayerRequest) GetOsType() OSType {
	if x != nil {
		return x.OsType
	}
	return OSType_OSTypeUnknow
}

func (x *CreatePlayerRequest) GetPlatform() PlatformType {
	if x != nil {
		return x.Platform
	}
	return PlatformType_PlatformUnKnow
}

type CreatePlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player *PlayerBaseData `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"` // 玩家信息
}

func (x *CreatePlayerResponse) Reset() {
	*x = CreatePlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlayerResponse) ProtoMessage() {}

func (x *CreatePlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlayerResponse.ProtoReflect.Descriptor instead.
func (*CreatePlayerResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{30}
}

func (x *CreatePlayerResponse) GetPlayer() *PlayerBaseData {
	if x != nil {
		return x.Player
	}
	return nil
}

//screenSer 协议 : 0x03ZZZZ  战斗服务 协议 ************************************
type EnterMapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnterMapRequest) Reset() {
	*x = EnterMapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterMapRequest) ProtoMessage() {}

func (x *EnterMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterMapRequest.ProtoReflect.Descriptor instead.
func (*EnterMapRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{31}
}

type EnterMapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前玩家信息
	Me *Player `protobuf:"bytes,1,opt,name=me,proto3" json:"me,omitempty"`
	// 当前玩家位置
	Location   *EntityLocation `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	ReliveTime int32           `protobuf:"varint,3,opt,name=relive_time,json=reliveTime,proto3" json:"relive_time,omitempty"`
}

func (x *EnterMapResponse) Reset() {
	*x = EnterMapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterMapResponse) ProtoMessage() {}

func (x *EnterMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterMapResponse.ProtoReflect.Descriptor instead.
func (*EnterMapResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{32}
}

func (x *EnterMapResponse) GetMe() *Player {
	if x != nil {
		return x.Me
	}
	return nil
}

func (x *EnterMapResponse) GetLocation() *EntityLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *EnterMapResponse) GetReliveTime() int32 {
	if x != nil {
		return x.ReliveTime
	}
	return 0
}

type UpdateSelfLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movement *EntityMovement `protobuf:"bytes,1,opt,name=movement,proto3" json:"movement,omitempty"`
}

func (x *UpdateSelfLocationRequest) Reset() {
	*x = UpdateSelfLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSelfLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSelfLocationRequest) ProtoMessage() {}

func (x *UpdateSelfLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSelfLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateSelfLocationRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateSelfLocationRequest) GetMovement() *EntityMovement {
	if x != nil {
		return x.Movement
	}
	return nil
}

type UpdateSelfLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movement *EntityMovement `protobuf:"bytes,1,opt,name=movement,proto3" json:"movement,omitempty"`
}

func (x *UpdateSelfLocationResponse) Reset() {
	*x = UpdateSelfLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSelfLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSelfLocationResponse) ProtoMessage() {}

func (x *UpdateSelfLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSelfLocationResponse.ProtoReflect.Descriptor instead.
func (*UpdateSelfLocationResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateSelfLocationResponse) GetMovement() *EntityMovement {
	if x != nil {
		return x.Movement
	}
	return nil
}

type UseSkillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 使用的技能 id
	SkillId int32 `protobuf:"varint,1,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	// 技能使用方向，相对于玩家当前位置.
	Dir *EntityLocation `protobuf:"bytes,2,opt,name=dir,proto3" json:"dir,omitempty"`
	// 技能使用的位置  指定后，会将玩家重置到该位置.
	FromLocation *EntityLocation `protobuf:"bytes,3,opt,name=from_location,json=fromLocation,proto3" json:"from_location,omitempty"`
	// 技能指定使用的目标
	TargetId *EntityId `protobuf:"bytes,4,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	// 连击动作
	ComboIndex int32 `protobuf:"varint,5,opt,name=combo_index,json=comboIndex,proto3" json:"combo_index,omitempty"`
}

func (x *UseSkillRequest) Reset() {
	*x = UseSkillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseSkillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseSkillRequest) ProtoMessage() {}

func (x *UseSkillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseSkillRequest.ProtoReflect.Descriptor instead.
func (*UseSkillRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{35}
}

func (x *UseSkillRequest) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *UseSkillRequest) GetDir() *EntityLocation {
	if x != nil {
		return x.Dir
	}
	return nil
}

func (x *UseSkillRequest) GetFromLocation() *EntityLocation {
	if x != nil {
		return x.FromLocation
	}
	return nil
}

func (x *UseSkillRequest) GetTargetId() *EntityId {
	if x != nil {
		return x.TargetId
	}
	return nil
}

func (x *UseSkillRequest) GetComboIndex() int32 {
	if x != nil {
		return x.ComboIndex
	}
	return 0
}

type UseSkillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UseSkillResponse) Reset() {
	*x = UseSkillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseSkillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseSkillResponse) ProtoMessage() {}

func (x *UseSkillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseSkillResponse.ProtoReflect.Descriptor instead.
func (*UseSkillResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{36}
}

// 拾取一个掉落物
type PickFallingObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FallingObjectId int64 `protobuf:"varint,1,opt,name=falling_object_id,json=fallingObjectId,proto3" json:"falling_object_id,omitempty"`
}

func (x *PickFallingObjectRequest) Reset() {
	*x = PickFallingObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickFallingObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickFallingObjectRequest) ProtoMessage() {}

func (x *PickFallingObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickFallingObjectRequest.ProtoReflect.Descriptor instead.
func (*PickFallingObjectRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{37}
}

func (x *PickFallingObjectRequest) GetFallingObjectId() int64 {
	if x != nil {
		return x.FallingObjectId
	}
	return 0
}

type PickFallingObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 拾取到的掉落物记录
	FallingObjects *FallingObject `protobuf:"bytes,1,opt,name=falling_objects,json=fallingObjects,proto3" json:"falling_objects,omitempty"`
	// 拾取的玩家
	PickupPlayer *Player `protobuf:"bytes,2,opt,name=pickup_player,json=pickupPlayer,proto3" json:"pickup_player,omitempty"`
}

func (x *PickFallingObjectResponse) Reset() {
	*x = PickFallingObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickFallingObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickFallingObjectResponse) ProtoMessage() {}

func (x *PickFallingObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickFallingObjectResponse.ProtoReflect.Descriptor instead.
func (*PickFallingObjectResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{38}
}

func (x *PickFallingObjectResponse) GetFallingObjects() *FallingObject {
	if x != nil {
		return x.FallingObjects
	}
	return nil
}

func (x *PickFallingObjectResponse) GetPickupPlayer() *Player {
	if x != nil {
		return x.PickupPlayer
	}
	return nil
}

type RespawnPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespawnPoint PlayerRespawnPoint `protobuf:"varint,1,opt,name=respawn_point,json=respawnPoint,proto3,enum=gameMessageCore.PlayerRespawnPoint" json:"respawn_point,omitempty"`
}

func (x *RespawnPlayerRequest) Reset() {
	*x = RespawnPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespawnPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespawnPlayerRequest) ProtoMessage() {}

func (x *RespawnPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespawnPlayerRequest.ProtoReflect.Descriptor instead.
func (*RespawnPlayerRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{39}
}

func (x *RespawnPlayerRequest) GetRespawnPoint() PlayerRespawnPoint {
	if x != nil {
		return x.RespawnPoint
	}
	return PlayerRespawnPoint_PlayerRespawnPointLcoal
}

type RespawnPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64           `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CurHp    int32           `protobuf:"varint,2,opt,name=cur_hp,json=curHp,proto3" json:"cur_hp,omitempty"`
	Active   bool            `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Location *EntityLocation `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *RespawnPlayerResponse) Reset() {
	*x = RespawnPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespawnPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespawnPlayerResponse) ProtoMessage() {}

func (x *RespawnPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespawnPlayerResponse.ProtoReflect.Descriptor instead.
func (*RespawnPlayerResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{40}
}

func (x *RespawnPlayerResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RespawnPlayerResponse) GetCurHp() int32 {
	if x != nil {
		return x.CurHp
	}
	return 0
}

func (x *RespawnPlayerResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *RespawnPlayerResponse) GetLocation() *EntityLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type BroadCastRespawnPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64           `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CurHp    int32           `protobuf:"varint,2,opt,name=cur_hp,json=curHp,proto3" json:"cur_hp,omitempty"`
	Active   bool            `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Location *EntityLocation `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *BroadCastRespawnPlayerResponse) Reset() {
	*x = BroadCastRespawnPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastRespawnPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastRespawnPlayerResponse) ProtoMessage() {}

func (x *BroadCastRespawnPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastRespawnPlayerResponse.ProtoReflect.Descriptor instead.
func (*BroadCastRespawnPlayerResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{41}
}

func (x *BroadCastRespawnPlayerResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BroadCastRespawnPlayerResponse) GetCurHp() int32 {
	if x != nil {
		return x.CurHp
	}
	return 0
}

func (x *BroadCastRespawnPlayerResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *BroadCastRespawnPlayerResponse) GetLocation() *EntityLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type BroadCastInitMapElementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视野内新增的实体列表
	Entity []*EntityWithLocation `protobuf:"bytes,1,rep,name=entity,proto3" json:"entity,omitempty"` //实体
	Final  bool                  `protobuf:"varint,2,opt,name=final,proto3" json:"final,omitempty"`  // 是否最后一个包
}

func (x *BroadCastInitMapElementResponse) Reset() {
	*x = BroadCastInitMapElementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastInitMapElementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastInitMapElementResponse) ProtoMessage() {}

func (x *BroadCastInitMapElementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastInitMapElementResponse.ProtoReflect.Descriptor instead.
func (*BroadCastInitMapElementResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{42}
}

func (x *BroadCastInitMapElementResponse) GetEntity() []*EntityWithLocation {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *BroadCastInitMapElementResponse) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

// 实体拾取掉落推送
type BroadCastFallingObjectPickedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 拾取到的掉落物记录
	FallingObjects []*FallingObject `protobuf:"bytes,1,rep,name=falling_objects,json=fallingObjects,proto3" json:"falling_objects,omitempty"`
	// 拾取的实体
	EntityId *EntityId `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *BroadCastFallingObjectPickedResponse) Reset() {
	*x = BroadCastFallingObjectPickedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastFallingObjectPickedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastFallingObjectPickedResponse) ProtoMessage() {}

func (x *BroadCastFallingObjectPickedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastFallingObjectPickedResponse.ProtoReflect.Descriptor instead.
func (*BroadCastFallingObjectPickedResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{43}
}

func (x *BroadCastFallingObjectPickedResponse) GetFallingObjects() []*FallingObject {
	if x != nil {
		return x.FallingObjects
	}
	return nil
}

func (x *BroadCastFallingObjectPickedResponse) GetEntityId() *EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

type BroadCastMapEntityUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视野内新增的实体列表
	EntityAdded []*EntityWithLocation `protobuf:"bytes,1,rep,name=entity_added,json=entityAdded,proto3" json:"entity_added,omitempty"`
	// 视野内移除的实体列表
	EntityRemoved []*EntityId `protobuf:"bytes,2,rep,name=entity_removed,json=entityRemoved,proto3" json:"entity_removed,omitempty"`
}

func (x *BroadCastMapEntityUpdateResponse) Reset() {
	*x = BroadCastMapEntityUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastMapEntityUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastMapEntityUpdateResponse) ProtoMessage() {}

func (x *BroadCastMapEntityUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastMapEntityUpdateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastMapEntityUpdateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{44}
}

func (x *BroadCastMapEntityUpdateResponse) GetEntityAdded() []*EntityWithLocation {
	if x != nil {
		return x.EntityAdded
	}
	return nil
}

func (x *BroadCastMapEntityUpdateResponse) GetEntityRemoved() []*EntityId {
	if x != nil {
		return x.EntityRemoved
	}
	return nil
}

type BroadCastEntityMoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moves []*EntityMovement `protobuf:"bytes,1,rep,name=moves,proto3" json:"moves,omitempty"`
}

func (x *BroadCastEntityMoveResponse) Reset() {
	*x = BroadCastEntityMoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastEntityMoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastEntityMoveResponse) ProtoMessage() {}

func (x *BroadCastEntityMoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastEntityMoveResponse.ProtoReflect.Descriptor instead.
func (*BroadCastEntityMoveResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{45}
}

func (x *BroadCastEntityMoveResponse) GetMoves() []*EntityMovement {
	if x != nil {
		return x.Moves
	}
	return nil
}

type BroadCastEntityDestroyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 销毁的 实体列表
	Entities []*EntityId `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *BroadCastEntityDestroyResponse) Reset() {
	*x = BroadCastEntityDestroyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastEntityDestroyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastEntityDestroyResponse) ProtoMessage() {}

func (x *BroadCastEntityDestroyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastEntityDestroyResponse.ProtoReflect.Descriptor instead.
func (*BroadCastEntityDestroyResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{46}
}

func (x *BroadCastEntityDestroyResponse) GetEntities() []*EntityId {
	if x != nil {
		return x.Entities
	}
	return nil
}

type BroadCastEntityCombatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 技能释放阶段
	State EntityCombatState `protobuf:"varint,1,opt,name=state,proto3,enum=gameMessageCore.EntityCombatState" json:"state,omitempty"`
	// 使用的技能 id
	SkillId int32 `protobuf:"varint,2,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	// 连击动作
	ComboIndex int32 `protobuf:"varint,3,opt,name=combo_index,json=comboIndex,proto3" json:"combo_index,omitempty"`
	// 使用技能的对象 id
	FromEntity *EntityId `protobuf:"bytes,4,opt,name=from_entity,json=fromEntity,proto3" json:"from_entity,omitempty"`
	// 技能使用方向，相对于释放玩家当前位置.
	Dir *EntityLocation `protobuf:"bytes,5,opt,name=dir,proto3" json:"dir,omitempty"`
	// 技能释放的位置
	FromLocation *EntityLocation `protobuf:"bytes,6,opt,name=from_location,json=fromLocation,proto3" json:"from_location,omitempty"`
	// 接收技能伤害的对象 id 数组
	Targets []*EntityDamage `protobuf:"bytes,7,rep,name=targets,proto3" json:"targets,omitempty"`
}

func (x *BroadCastEntityCombatResponse) Reset() {
	*x = BroadCastEntityCombatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastEntityCombatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastEntityCombatResponse) ProtoMessage() {}

func (x *BroadCastEntityCombatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastEntityCombatResponse.ProtoReflect.Descriptor instead.
func (*BroadCastEntityCombatResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{47}
}

func (x *BroadCastEntityCombatResponse) GetState() EntityCombatState {
	if x != nil {
		return x.State
	}
	return EntityCombatState_EntityCombatStateUnknown
}

func (x *BroadCastEntityCombatResponse) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *BroadCastEntityCombatResponse) GetComboIndex() int32 {
	if x != nil {
		return x.ComboIndex
	}
	return 0
}

func (x *BroadCastEntityCombatResponse) GetFromEntity() *EntityId {
	if x != nil {
		return x.FromEntity
	}
	return nil
}

func (x *BroadCastEntityCombatResponse) GetDir() *EntityLocation {
	if x != nil {
		return x.Dir
	}
	return nil
}

func (x *BroadCastEntityCombatResponse) GetFromLocation() *EntityLocation {
	if x != nil {
		return x.FromLocation
	}
	return nil
}

func (x *BroadCastEntityCombatResponse) GetTargets() []*EntityDamage {
	if x != nil {
		return x.Targets
	}
	return nil
}

type TeleportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToPos *Vector3 `protobuf:"bytes,9,opt,name=to_pos,json=toPos,proto3" json:"to_pos,omitempty"`
}

func (x *TeleportRequest) Reset() {
	*x = TeleportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeleportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeleportRequest) ProtoMessage() {}

func (x *TeleportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeleportRequest.ProtoReflect.Descriptor instead.
func (*TeleportRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{48}
}

func (x *TeleportRequest) GetToPos() *Vector3 {
	if x != nil {
		return x.ToPos
	}
	return nil
}

type TeleportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TeleportResponse) Reset() {
	*x = TeleportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeleportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeleportResponse) ProtoMessage() {}

func (x *TeleportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeleportResponse.ProtoReflect.Descriptor instead.
func (*TeleportResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{49}
}

type SelfTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SelfTasksRequest) Reset() {
	*x = SelfTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfTasksRequest) ProtoMessage() {}

func (x *SelfTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfTasksRequest.ProtoReflect.Descriptor instead.
func (*SelfTasksRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{50}
}

type SelfTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 玩家已经接取的任务列表
	Tasks *PlayerTask `protobuf:"bytes,1,opt,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *SelfTasksResponse) Reset() {
	*x = SelfTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfTasksResponse) ProtoMessage() {}

func (x *SelfTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfTasksResponse.ProtoReflect.Descriptor instead.
func (*SelfTasksResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{51}
}

func (x *SelfTasksResponse) GetTasks() *PlayerTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// 玩家任务状态更新
type BroadCastUpdateTaskListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind         TaskListType `protobuf:"varint,1,opt,name=kind,proto3,enum=gameMessageCore.TaskListType" json:"kind,omitempty"`
	TaskListInfo *TaskList    `protobuf:"bytes,2,opt,name=task_list_info,json=taskListInfo,proto3" json:"task_list_info,omitempty"`
}

func (x *BroadCastUpdateTaskListResponse) Reset() {
	*x = BroadCastUpdateTaskListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastUpdateTaskListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastUpdateTaskListResponse) ProtoMessage() {}

func (x *BroadCastUpdateTaskListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastUpdateTaskListResponse.ProtoReflect.Descriptor instead.
func (*BroadCastUpdateTaskListResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{52}
}

func (x *BroadCastUpdateTaskListResponse) GetKind() TaskListType {
	if x != nil {
		return x.Kind
	}
	return TaskListType_TaskListTypeUnknown
}

func (x *BroadCastUpdateTaskListResponse) GetTaskListInfo() *TaskList {
	if x != nil {
		return x.TaskListInfo
	}
	return nil
}

// 领取任务
type AcceptTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind TaskListType `protobuf:"varint,1,opt,name=kind,proto3,enum=gameMessageCore.TaskListType" json:"kind,omitempty"`
}

func (x *AcceptTaskRequest) Reset() {
	*x = AcceptTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTaskRequest) ProtoMessage() {}

func (x *AcceptTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTaskRequest.ProtoReflect.Descriptor instead.
func (*AcceptTaskRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{53}
}

func (x *AcceptTaskRequest) GetKind() TaskListType {
	if x != nil {
		return x.Kind
	}
	return TaskListType_TaskListTypeUnknown
}

type AcceptTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskListInfo *TaskList `protobuf:"bytes,1,opt,name=task_list_info,json=taskListInfo,proto3" json:"task_list_info,omitempty"`
}

func (x *AcceptTaskResponse) Reset() {
	*x = AcceptTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTaskResponse) ProtoMessage() {}

func (x *AcceptTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTaskResponse.ProtoReflect.Descriptor instead.
func (*AcceptTaskResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{54}
}

func (x *AcceptTaskResponse) GetTaskListInfo() *TaskList {
	if x != nil {
		return x.TaskListInfo
	}
	return nil
}

// 放弃任务(任务有保护时间)
type AbandonmentTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// task list type
	Kind TaskListType `protobuf:"varint,1,opt,name=kind,proto3,enum=gameMessageCore.TaskListType" json:"kind,omitempty"`
}

func (x *AbandonmentTaskRequest) Reset() {
	*x = AbandonmentTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbandonmentTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbandonmentTaskRequest) ProtoMessage() {}

func (x *AbandonmentTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbandonmentTaskRequest.ProtoReflect.Descriptor instead.
func (*AbandonmentTaskRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{55}
}

func (x *AbandonmentTaskRequest) GetKind() TaskListType {
	if x != nil {
		return x.Kind
	}
	return TaskListType_TaskListTypeUnknown
}

type AbandonmentTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskListInfo *TaskList `protobuf:"bytes,1,opt,name=task_list_info,json=taskListInfo,proto3" json:"task_list_info,omitempty"`
}

func (x *AbandonmentTaskResponse) Reset() {
	*x = AbandonmentTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbandonmentTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbandonmentTaskResponse) ProtoMessage() {}

func (x *AbandonmentTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbandonmentTaskResponse.ProtoReflect.Descriptor instead.
func (*AbandonmentTaskResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{56}
}

func (x *AbandonmentTaskResponse) GetTaskListInfo() *TaskList {
	if x != nil {
		return x.TaskListInfo
	}
	return nil
}

// 获取任务奖励
type TaskRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskListKind TaskListType `protobuf:"varint,1,opt,name=task_list_kind,json=taskListKind,proto3,enum=gameMessageCore.TaskListType" json:"task_list_kind,omitempty"`
}

func (x *TaskRewardRequest) Reset() {
	*x = TaskRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRewardRequest) ProtoMessage() {}

func (x *TaskRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRewardRequest.ProtoReflect.Descriptor instead.
func (*TaskRewardRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{57}
}

func (x *TaskRewardRequest) GetTaskListKind() TaskListType {
	if x != nil {
		return x.TaskListKind
	}
	return TaskListType_TaskListTypeUnknown
}

type TaskRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskListInfo *TaskList `protobuf:"bytes,1,opt,name=task_list_info,json=taskListInfo,proto3" json:"task_list_info,omitempty"`
}

func (x *TaskRewardResponse) Reset() {
	*x = TaskRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRewardResponse) ProtoMessage() {}

func (x *TaskRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRewardResponse.ProtoReflect.Descriptor instead.
func (*TaskRewardResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{58}
}

func (x *TaskRewardResponse) GetTaskListInfo() *TaskList {
	if x != nil {
		return x.TaskListInfo
	}
	return nil
}

// 获取任务链奖励
type TaskListRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind TaskListType `protobuf:"varint,1,opt,name=kind,proto3,enum=gameMessageCore.TaskListType" json:"kind,omitempty"`
}

func (x *TaskListRewardRequest) Reset() {
	*x = TaskListRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListRewardRequest) ProtoMessage() {}

func (x *TaskListRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListRewardRequest.ProtoReflect.Descriptor instead.
func (*TaskListRewardRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{59}
}

func (x *TaskListRewardRequest) GetKind() TaskListType {
	if x != nil {
		return x.Kind
	}
	return TaskListType_TaskListTypeUnknown
}

type TaskListRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskListInfo *TaskList `protobuf:"bytes,1,opt,name=task_list_info,json=taskListInfo,proto3" json:"task_list_info,omitempty"`
}

func (x *TaskListRewardResponse) Reset() {
	*x = TaskListRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListRewardResponse) ProtoMessage() {}

func (x *TaskListRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListRewardResponse.ProtoReflect.Descriptor instead.
func (*TaskListRewardResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{60}
}

func (x *TaskListRewardResponse) GetTaskListInfo() *TaskList {
	if x != nil {
		return x.TaskListInfo
	}
	return nil
}

type UpgradeTaskProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskListKind TaskListType `protobuf:"varint,1,opt,name=task_list_kind,json=taskListKind,proto3,enum=gameMessageCore.TaskListType" json:"task_list_kind,omitempty"`
	// item NFT ids : 提交寻物任务的 附带信息
	Items []*TaskOptionItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// move to pos 附带信息
	Pos *TaskOptionMoveTo `protobuf:"bytes,3,opt,name=pos,proto3" json:"pos,omitempty"`
	// quiz 附加信息
	Quiz *TaskOptionQuiz `protobuf:"bytes,4,opt,name=quiz,proto3" json:"quiz,omitempty"`
}

func (x *UpgradeTaskProgressRequest) Reset() {
	*x = UpgradeTaskProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeTaskProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeTaskProgressRequest) ProtoMessage() {}

func (x *UpgradeTaskProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeTaskProgressRequest.ProtoReflect.Descriptor instead.
func (*UpgradeTaskProgressRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{61}
}

func (x *UpgradeTaskProgressRequest) GetTaskListKind() TaskListType {
	if x != nil {
		return x.TaskListKind
	}
	return TaskListType_TaskListTypeUnknown
}

func (x *UpgradeTaskProgressRequest) GetItems() []*TaskOptionItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *UpgradeTaskProgressRequest) GetPos() *TaskOptionMoveTo {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *UpgradeTaskProgressRequest) GetQuiz() *TaskOptionQuiz {
	if x != nil {
		return x.Quiz
	}
	return nil
}

type UpgradeTaskProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpgradeTaskProgressResponse) Reset() {
	*x = UpgradeTaskProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeTaskProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeTaskProgressResponse) ProtoMessage() {}

func (x *UpgradeTaskProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeTaskProgressResponse.ProtoReflect.Descriptor instead.
func (*UpgradeTaskProgressResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{62}
}

type BroadCastTaskRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTaskListReward bool            `protobuf:"varint,1,opt,name=is_task_list_reward,json=isTaskListReward,proto3" json:"is_task_list_reward,omitempty"`
	TaskListKind     TaskListType    `protobuf:"varint,2,opt,name=task_list_kind,json=taskListKind,proto3,enum=gameMessageCore.TaskListType" json:"task_list_kind,omitempty"`
	RewardExp        int32           `protobuf:"varint,3,opt,name=reward_exp,json=rewardExp,proto3" json:"reward_exp,omitempty"`
	RewardItem       []*ItemBaseInfo `protobuf:"bytes,4,rep,name=reward_item,json=rewardItem,proto3" json:"reward_item,omitempty"`
}

func (x *BroadCastTaskRewardResponse) Reset() {
	*x = BroadCastTaskRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastTaskRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastTaskRewardResponse) ProtoMessage() {}

func (x *BroadCastTaskRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastTaskRewardResponse.ProtoReflect.Descriptor instead.
func (*BroadCastTaskRewardResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{63}
}

func (x *BroadCastTaskRewardResponse) GetIsTaskListReward() bool {
	if x != nil {
		return x.IsTaskListReward
	}
	return false
}

func (x *BroadCastTaskRewardResponse) GetTaskListKind() TaskListType {
	if x != nil {
		return x.TaskListKind
	}
	return TaskListType_TaskListTypeUnknown
}

func (x *BroadCastTaskRewardResponse) GetRewardExp() int32 {
	if x != nil {
		return x.RewardExp
	}
	return 0
}

func (x *BroadCastTaskRewardResponse) GetRewardItem() []*ItemBaseInfo {
	if x != nil {
		return x.RewardItem
	}
	return nil
}

type SendChatMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatType ChatChannelType `protobuf:"varint,1,opt,name=chat_type,json=chatType,proto3,enum=gameMessageCore.ChatChannelType" json:"chat_type,omitempty"`
	Content  string          `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// 发送到*世界/分线/附近/副本*这些公共频道的时候不需要带`receiver_id`
	// 只有*私聊*需要带`receiver_id`
	ReceiverPlayerId int64 `protobuf:"varint,3,opt,name=receiver_player_id,json=receiverPlayerId,proto3" json:"receiver_player_id,omitempty"`
}

func (x *SendChatMessageRequest) Reset() {
	*x = SendChatMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatMessageRequest) ProtoMessage() {}

func (x *SendChatMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatMessageRequest.ProtoReflect.Descriptor instead.
func (*SendChatMessageRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{64}
}

func (x *SendChatMessageRequest) GetChatType() ChatChannelType {
	if x != nil {
		return x.ChatType
	}
	return ChatChannelType_ChatChannelTypeUnknown
}

func (x *SendChatMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendChatMessageRequest) GetReceiverPlayerId() int64 {
	if x != nil {
		return x.ReceiverPlayerId
	}
	return 0
}

type SendChatMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId int64 `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
}

func (x *SendChatMessageResponse) Reset() {
	*x = SendChatMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatMessageResponse) ProtoMessage() {}

func (x *SendChatMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatMessageResponse.ProtoReflect.Descriptor instead.
func (*SendChatMessageResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{65}
}

func (x *SendChatMessageResponse) GetMsgId() int64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

// 玩家接收到的聊天信息
type BroadCastChatMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages         []*ChatMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	HistoricalRecord bool           `protobuf:"varint,2,opt,name=historical_record,json=historicalRecord,proto3" json:"historical_record,omitempty"`
}

func (x *BroadCastChatMessagesResponse) Reset() {
	*x = BroadCastChatMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastChatMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastChatMessagesResponse) ProtoMessage() {}

func (x *BroadCastChatMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastChatMessagesResponse.ProtoReflect.Descriptor instead.
func (*BroadCastChatMessagesResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{66}
}

func (x *BroadCastChatMessagesResponse) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *BroadCastChatMessagesResponse) GetHistoricalRecord() bool {
	if x != nil {
		return x.HistoricalRecord
	}
	return false
}

type BroadCastRemoveChatMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgIds []int64 `protobuf:"varint,1,rep,packed,name=msg_ids,json=msgIds,proto3" json:"msg_ids,omitempty"`
}

func (x *BroadCastRemoveChatMessageResponse) Reset() {
	*x = BroadCastRemoveChatMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastRemoveChatMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastRemoveChatMessageResponse) ProtoMessage() {}

func (x *BroadCastRemoveChatMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastRemoveChatMessageResponse.ProtoReflect.Descriptor instead.
func (*BroadCastRemoveChatMessageResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{67}
}

func (x *BroadCastRemoveChatMessageResponse) GetMsgIds() []int64 {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

type BroadCastUpdateChatStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatState ChatState `protobuf:"varint,1,opt,name=chat_state,json=chatState,proto3,enum=gameMessageCore.ChatState" json:"chat_state,omitempty"`
}

func (x *BroadCastUpdateChatStateResponse) Reset() {
	*x = BroadCastUpdateChatStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastUpdateChatStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastUpdateChatStateResponse) ProtoMessage() {}

func (x *BroadCastUpdateChatStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastUpdateChatStateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastUpdateChatStateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{68}
}

func (x *BroadCastUpdateChatStateResponse) GetChatState() ChatState {
	if x != nil {
		return x.ChatState
	}
	return ChatState_ChatStateNormal
}

//getaway   协议 : 0x06ZZZZ  网关服务 协议 ************************************
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{69}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{70}
}

var File_message_body_proto protoreflect.FileDescriptor

var file_message_body_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x1a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x08, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x82, 0x39, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d,
	0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x81, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x69,
	0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a,
	0x11, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x82, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0f,
	0x69, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x83, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e,
	0x69, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50,
	0x0a, 0x11, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x84, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x55, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x0f, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x11, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x85, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x53, 0x0a, 0x12, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x86, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x87, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x88, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x89, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x13, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x16, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x90,
	0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x14, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x1c, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x91, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x1f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x92, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x1b, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x1c,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x64, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x93, 0x80, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x18, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x24,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x94, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x1f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x95, 0x80, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a,
	0x16, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x96, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x19,
	0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x97, 0x80, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x1a, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x98, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5c, 0x0a, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x99, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a,
	0x16, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xa0, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60,
	0x0a, 0x17, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xa1, 0x80, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x73, 0x69, 0x67, 0x6e,
	0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x63, 0x0a, 0x18, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xa2, 0x80, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x15,
	0x73, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x1c, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xa3, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x19, 0x75, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x72, 0x0a, 0x1d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xa4, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1a,
	0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x14, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x81, 0x80, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x12, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x15, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x82,
	0x80, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x83, 0x80, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x5f, 0x0a, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x84, 0x80, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x81, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x12, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x82, 0x80, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x1c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x83, 0x80, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x72, 0x0a, 0x1d, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x84, 0x80, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x1a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x11, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x85, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0f, 0x75, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x53, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x86, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x10, 0x75, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x1b, 0x70, 0x69, 0x63, 0x6b, 0x5f, 0x66, 0x61,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x87, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50,
	0x69, 0x63, 0x6b, 0x46, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x70, 0x69, 0x63, 0x6b, 0x46,
	0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x6f, 0x0a, 0x1c, 0x70, 0x69, 0x63, 0x6b, 0x5f, 0x66, 0x61, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x88, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x69,
	0x63, 0x6b, 0x46, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x70, 0x69, 0x63, 0x6b, 0x46,
	0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x89,
	0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x14, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x90, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x15, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x24, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x6d, 0x61,
	0x70, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x91, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1f,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x61, 0x70,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x86, 0x01, 0x0a, 0x25, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x6d,
	0x61, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x92, 0x80, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x20, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73,
	0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x22, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x93,
	0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x1f, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d,
	0x6f, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x94, 0x80, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7c, 0x0a, 0x21, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x95, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7f, 0x0a, 0x22, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x96, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x10, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x97, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54,
	0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x52, 0x0a, 0x11, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x98, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x10, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x29, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x99, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x24, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x21, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x64, 0x65, 0x61, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0xa1, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x61, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x73, 0x65, 0x6c, 0x66,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x81,
	0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x6c,
	0x66, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a,
	0x13, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x82, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53,
	0x65, 0x6c, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x24, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x83,
	0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61,
	0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1f, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x84, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x11, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x85, 0x80, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65,
	0x0a, 0x18, 0x61, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x86, 0x80, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x61,
	0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x19, 0x61, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x87, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x62, 0x61,
	0x6e, 0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x61, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x56, 0x0a, 0x13, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x88, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x89, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12,
	0x74, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x63, 0x0a, 0x18, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x90,
	0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x15, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x19, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x91, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x72, 0x0a, 0x1d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x92, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x1e, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x93, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x1f, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x94, 0x80,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x67, 0x0a, 0x19, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x81, 0x80, 0xc4, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x1a, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x82, 0x80, 0xc4, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17,
	0x73, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x21, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x83, 0x80, 0xc4,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x27, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x84, 0x80, 0xc4, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x22, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x25, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x85, 0x80, 0xc4, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x20,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x81, 0x80, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0d, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x82, 0x80, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x0c, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x0f, 0x49, 0x74,
	0x65, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x29, 0x0a, 0x0e, 0x49, 0x74,
	0x65, 0x6d, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x12, 0x0a, 0x10, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x72,
	0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6b, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2e, 0x0a, 0x13, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x16, 0x0a, 0x14, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x18, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x4a, 0x0a, 0x1b, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x47, 0x0a, 0x18,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x52, 0x0a, 0x1f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61,
	0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c,
	0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x46, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x55, 0x0a, 0x16, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4a,
	0x0a, 0x17, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x6c, 0x6f,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0xa1, 0x02, 0x0a, 0x13, 0x53,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x12, 0x30, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x53, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2f, 0x0a,
	0x14, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x22, 0xe2,
	0x01, 0x0a, 0x14, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x53,
	0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x24, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x1d, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x61, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x3a, 0x0a,
	0x09, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x64, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x1a, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x63, 0x75, 0x72, 0x45, 0x78, 0x70, 0x22, 0x2a, 0x0a, 0x12, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4e, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0xb4, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x30, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x53, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x4f, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x11,
	0x0a, 0x0f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x99, 0x01, 0x0a, 0x10, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x02, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x02, 0x6d, 0x65, 0x12,
	0x3b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x58, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x6f,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x6d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x59, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x6c, 0x66, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0xfe, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x03, 0x64, 0x69, 0x72, 0x12, 0x44, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x12, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x18, 0x50, 0x69, 0x63, 0x6b, 0x46,
	0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x66, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22,
	0xa2, 0x01, 0x0a, 0x19, 0x50, 0x69, 0x63, 0x6b, 0x46, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x0f, 0x66, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0e, 0x66, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0c, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x61, 0x77, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77,
	0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x75, 0x72,
	0x5f, 0x68, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x75, 0x72, 0x48, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa5, 0x01, 0x0a, 0x1e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x5f, 0x68, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x75, 0x72, 0x48, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x3b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x74, 0x0a,
	0x1f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x61,
	0x70, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x22, 0xa7, 0x01, 0x0a, 0x24, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73,
	0x74, 0x46, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x69,
	0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0f,
	0x66, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0e, 0x66, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0xac, 0x01,
	0x0a, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x64, 0x64,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x0d, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x22, 0x54, 0x0a, 0x1b,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x6d,
	0x6f, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x6d, 0x6f, 0x76,
	0x65, 0x73, 0x22, 0x57, 0x0a, 0x1e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x83, 0x03, 0x0a, 0x1d,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6d, 0x62, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x62, 0x6f, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x3a, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x31, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64,
	0x69, 0x72, 0x12, 0x44, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x22, 0x42, 0x0a, 0x0f, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x05,
	0x74, 0x6f, 0x50, 0x6f, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x65, 0x6c,
	0x66, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a,
	0x11, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x1f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x0e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a,
	0x11, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x55, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c,
	0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x16,
	0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x5a, 0x0a, 0x17, 0x41, 0x62, 0x61,
	0x6e, 0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0e, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x22,
	0x55, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x15, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x31, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x22, 0x59, 0x0a, 0x16, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x82, 0x02,
	0x0a, 0x1a, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0e,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x33, 0x0a,
	0x04, 0x71, 0x75, 0x69, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x04, 0x71, 0x75,
	0x69, 0x7a, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xf0, 0x01, 0x0a, 0x1b, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x69, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x43, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x45, 0x78, 0x70, 0x12, 0x3e, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x22, 0x9f, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3d, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x1d, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x22, 0x3d, 0x0a, 0x22, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x73,
	0x22, 0x5d, 0x0a, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e,
	0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x13,
	0x5a, 0x11, 0x2e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_body_proto_rawDescOnce sync.Once
	file_message_body_proto_rawDescData = file_message_body_proto_rawDesc
)

func file_message_body_proto_rawDescGZIP() []byte {
	file_message_body_proto_rawDescOnce.Do(func() {
		file_message_body_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_body_proto_rawDescData)
	})
	return file_message_body_proto_rawDescData
}

var file_message_body_proto_msgTypes = make([]protoimpl.MessageInfo, 71)
var file_message_body_proto_goTypes = []interface{}{
	(*Envelope)(nil),                             // 0: gameMessageCore.Envelope
	(*ItemGetRequest)(nil),                       // 1: gameMessageCore.ItemGetRequest
	(*ItemGetResponse)(nil),                      // 2: gameMessageCore.ItemGetResponse
	(*ItemUseRequest)(nil),                       // 3: gameMessageCore.ItemUseRequest
	(*ItemUseResponse)(nil),                      // 4: gameMessageCore.ItemUseResponse
	(*ItemDropRequest)(nil),                      // 5: gameMessageCore.ItemDropRequest
	(*ItemDropResponse)(nil),                     // 6: gameMessageCore.ItemDropResponse
	(*UpdateAvatarRequest)(nil),                  // 7: gameMessageCore.UpdateAvatarRequest
	(*UpdateAvatarResponse)(nil),                 // 8: gameMessageCore.UpdateAvatarResponse
	(*UnloadAvatarRequest)(nil),                  // 9: gameMessageCore.UnloadAvatarRequest
	(*UnloadAvatarResponse)(nil),                 // 10: gameMessageCore.UnloadAvatarResponse
	(*BroadCastItemAddResponse)(nil),             // 11: gameMessageCore.BroadCastItemAddResponse
	(*BroadCastItemUpdateResponse)(nil),          // 12: gameMessageCore.BroadCastItemUpdateResponse
	(*BroadCastItemDelResponse)(nil),             // 13: gameMessageCore.BroadCastItemDelResponse
	(*BroadCastUpdateItemSlotResponse)(nil),      // 14: gameMessageCore.BroadCastUpdateItemSlotResponse
	(*GetItemSlotRequest)(nil),                   // 15: gameMessageCore.GetItemSlotRequest
	(*GetItemSlotResponse)(nil),                  // 16: gameMessageCore.GetItemSlotResponse
	(*UpgradeItemSlotRequest)(nil),               // 17: gameMessageCore.UpgradeItemSlotRequest
	(*UpgradeItemSlotResponse)(nil),              // 18: gameMessageCore.UpgradeItemSlotResponse
	(*SigninPlayerRequest)(nil),                  // 19: gameMessageCore.SigninPlayerRequest
	(*SigninPlayerResponse)(nil),                 // 20: gameMessageCore.SigninPlayerResponse
	(*SignOutPlayerRequest)(nil),                 // 21: gameMessageCore.SignOutPlayerRequest
	(*SignOutPlayerResponse)(nil),                // 22: gameMessageCore.SignOutPlayerResponse
	(*BroadCastEntityProfileUpdateResponse)(nil), // 23: gameMessageCore.BroadCastEntityProfileUpdateResponse
	(*BroadCastMonsterDeathResponse)(nil),        // 24: gameMessageCore.BroadCastMonsterDeathResponse
	(*UpgradePlayerLevelRequest)(nil),            // 25: gameMessageCore.UpgradePlayerLevelRequest
	(*UpgradePlayerLevelResponse)(nil),           // 26: gameMessageCore.UpgradePlayerLevelResponse
	(*QueryPlayerRequest)(nil),                   // 27: gameMessageCore.QueryPlayerRequest
	(*QueryPlayerResponse)(nil),                  // 28: gameMessageCore.QueryPlayerResponse
	(*CreatePlayerRequest)(nil),                  // 29: gameMessageCore.CreatePlayerRequest
	(*CreatePlayerResponse)(nil),                 // 30: gameMessageCore.CreatePlayerResponse
	(*EnterMapRequest)(nil),                      // 31: gameMessageCore.EnterMapRequest
	(*EnterMapResponse)(nil),                     // 32: gameMessageCore.EnterMapResponse
	(*UpdateSelfLocationRequest)(nil),            // 33: gameMessageCore.UpdateSelfLocationRequest
	(*UpdateSelfLocationResponse)(nil),           // 34: gameMessageCore.UpdateSelfLocationResponse
	(*UseSkillRequest)(nil),                      // 35: gameMessageCore.UseSkillRequest
	(*UseSkillResponse)(nil),                     // 36: gameMessageCore.UseSkillResponse
	(*PickFallingObjectRequest)(nil),             // 37: gameMessageCore.PickFallingObjectRequest
	(*PickFallingObjectResponse)(nil),            // 38: gameMessageCore.PickFallingObjectResponse
	(*RespawnPlayerRequest)(nil),                 // 39: gameMessageCore.RespawnPlayerRequest
	(*RespawnPlayerResponse)(nil),                // 40: gameMessageCore.RespawnPlayerResponse
	(*BroadCastRespawnPlayerResponse)(nil),       // 41: gameMessageCore.BroadCastRespawnPlayerResponse
	(*BroadCastInitMapElementResponse)(nil),      // 42: gameMessageCore.BroadCastInitMapElementResponse
	(*BroadCastFallingObjectPickedResponse)(nil), // 43: gameMessageCore.BroadCastFallingObjectPickedResponse
	(*BroadCastMapEntityUpdateResponse)(nil),     // 44: gameMessageCore.BroadCastMapEntityUpdateResponse
	(*BroadCastEntityMoveResponse)(nil),          // 45: gameMessageCore.BroadCastEntityMoveResponse
	(*BroadCastEntityDestroyResponse)(nil),       // 46: gameMessageCore.BroadCastEntityDestroyResponse
	(*BroadCastEntityCombatResponse)(nil),        // 47: gameMessageCore.BroadCastEntityCombatResponse
	(*TeleportRequest)(nil),                      // 48: gameMessageCore.TeleportRequest
	(*TeleportResponse)(nil),                     // 49: gameMessageCore.TeleportResponse
	(*SelfTasksRequest)(nil),                     // 50: gameMessageCore.SelfTasksRequest
	(*SelfTasksResponse)(nil),                    // 51: gameMessageCore.SelfTasksResponse
	(*BroadCastUpdateTaskListResponse)(nil),      // 52: gameMessageCore.BroadCastUpdateTaskListResponse
	(*AcceptTaskRequest)(nil),                    // 53: gameMessageCore.AcceptTaskRequest
	(*AcceptTaskResponse)(nil),                   // 54: gameMessageCore.AcceptTaskResponse
	(*AbandonmentTaskRequest)(nil),               // 55: gameMessageCore.AbandonmentTaskRequest
	(*AbandonmentTaskResponse)(nil),              // 56: gameMessageCore.AbandonmentTaskResponse
	(*TaskRewardRequest)(nil),                    // 57: gameMessageCore.TaskRewardRequest
	(*TaskRewardResponse)(nil),                   // 58: gameMessageCore.TaskRewardResponse
	(*TaskListRewardRequest)(nil),                // 59: gameMessageCore.TaskListRewardRequest
	(*TaskListRewardResponse)(nil),               // 60: gameMessageCore.TaskListRewardResponse
	(*UpgradeTaskProgressRequest)(nil),           // 61: gameMessageCore.UpgradeTaskProgressRequest
	(*UpgradeTaskProgressResponse)(nil),          // 62: gameMessageCore.UpgradeTaskProgressResponse
	(*BroadCastTaskRewardResponse)(nil),          // 63: gameMessageCore.BroadCastTaskRewardResponse
	(*SendChatMessageRequest)(nil),               // 64: gameMessageCore.SendChatMessageRequest
	(*SendChatMessageResponse)(nil),              // 65: gameMessageCore.SendChatMessageResponse
	(*BroadCastChatMessagesResponse)(nil),        // 66: gameMessageCore.BroadCastChatMessagesResponse
	(*BroadCastRemoveChatMessageResponse)(nil),   // 67: gameMessageCore.BroadCastRemoveChatMessageResponse
	(*BroadCastUpdateChatStateResponse)(nil),     // 68: gameMessageCore.BroadCastUpdateChatStateResponse
	(*PingRequest)(nil),                          // 69: gameMessageCore.PingRequest
	(*PingResponse)(nil),                         // 70: gameMessageCore.PingResponse
	(EnvelopeType)(0),                            // 71: gameMessageCore.EnvelopeType
	(*Item)(nil),                                 // 72: gameMessageCore.Item
	(AvatarPosition)(0),                          // 73: gameMessageCore.AvatarPosition
	(*ItemSlot)(nil),                             // 74: gameMessageCore.ItemSlot
	(OSType)(0),                                  // 75: gameMessageCore.OSType
	(PlatformType)(0),                            // 76: gameMessageCore.PlatformType
	(*Player)(nil),                               // 77: gameMessageCore.Player
	(*EntityId)(nil),                             // 78: gameMessageCore.EntityId
	(*EntityProfileUpdate)(nil),                  // 79: gameMessageCore.EntityProfileUpdate
	(*Vector3)(nil),                              // 80: gameMessageCore.Vector3
	(*ItemBaseInfo)(nil),                         // 81: gameMessageCore.ItemBaseInfo
	(*PlayerBaseData)(nil),                       // 82: gameMessageCore.PlayerBaseData
	(*PlayerFeature)(nil),                        // 83: gameMessageCore.PlayerFeature
	(*EntityLocation)(nil),                       // 84: gameMessageCore.EntityLocation
	(*EntityMovement)(nil),                       // 85: gameMessageCore.EntityMovement
	(*FallingObject)(nil),                        // 86: gameMessageCore.FallingObject
	(PlayerRespawnPoint)(0),                      // 87: gameMessageCore.PlayerRespawnPoint
	(*EntityWithLocation)(nil),                   // 88: gameMessageCore.EntityWithLocation
	(EntityCombatState)(0),                       // 89: gameMessageCore.EntityCombatState
	(*EntityDamage)(nil),                         // 90: gameMessageCore.EntityDamage
	(*PlayerTask)(nil),                           // 91: gameMessageCore.PlayerTask
	(TaskListType)(0),                            // 92: gameMessageCore.TaskListType
	(*TaskList)(nil),                             // 93: gameMessageCore.TaskList
	(*TaskOptionItem)(nil),                       // 94: gameMessageCore.TaskOptionItem
	(*TaskOptionMoveTo)(nil),                     // 95: gameMessageCore.TaskOptionMoveTo
	(*TaskOptionQuiz)(nil),                       // 96: gameMessageCore.TaskOptionQuiz
	(ChatChannelType)(0),                         // 97: gameMessageCore.ChatChannelType
	(*ChatMessage)(nil),                          // 98: gameMessageCore.ChatMessage
	(ChatState)(0),                               // 99: gameMessageCore.ChatState
}
var file_message_body_proto_depIdxs = []int32{
	71,  // 0: gameMessageCore.Envelope.type:type_name -> gameMessageCore.EnvelopeType
	1,   // 1: gameMessageCore.Envelope.item_get_request:type_name -> gameMessageCore.ItemGetRequest
	2,   // 2: gameMessageCore.Envelope.item_get_response:type_name -> gameMessageCore.ItemGetResponse
	3,   // 3: gameMessageCore.Envelope.item_use_request:type_name -> gameMessageCore.ItemUseRequest
	4,   // 4: gameMessageCore.Envelope.item_use_response:type_name -> gameMessageCore.ItemUseResponse
	5,   // 5: gameMessageCore.Envelope.item_drop_request:type_name -> gameMessageCore.ItemDropRequest
	6,   // 6: gameMessageCore.Envelope.item_drop_response:type_name -> gameMessageCore.ItemDropResponse
	7,   // 7: gameMessageCore.Envelope.update_avatar_request:type_name -> gameMessageCore.UpdateAvatarRequest
	8,   // 8: gameMessageCore.Envelope.update_avatar_response:type_name -> gameMessageCore.UpdateAvatarResponse
	9,   // 9: gameMessageCore.Envelope.unload_avatar_request:type_name -> gameMessageCore.UnloadAvatarRequest
	10,  // 10: gameMessageCore.Envelope.unload_avatar_response:type_name -> gameMessageCore.UnloadAvatarResponse
	11,  // 11: gameMessageCore.Envelope.broad_cast_item_add_response:type_name -> gameMessageCore.BroadCastItemAddResponse
	12,  // 12: gameMessageCore.Envelope.broad_cast_item_update_response:type_name -> gameMessageCore.BroadCastItemUpdateResponse
	13,  // 13: gameMessageCore.Envelope.broad_cast_item_del_response:type_name -> gameMessageCore.BroadCastItemDelResponse
	14,  // 14: gameMessageCore.Envelope.broad_cast_update_item_slot_response:type_name -> gameMessageCore.BroadCastUpdateItemSlotResponse
	15,  // 15: gameMessageCore.Envelope.get_item_slot_request:type_name -> gameMessageCore.GetItemSlotRequest
	16,  // 16: gameMessageCore.Envelope.get_item_slot_response:type_name -> gameMessageCore.GetItemSlotResponse
	17,  // 17: gameMessageCore.Envelope.upgrade_item_slot_request:type_name -> gameMessageCore.UpgradeItemSlotRequest
	18,  // 18: gameMessageCore.Envelope.upgrade_item_slot_response:type_name -> gameMessageCore.UpgradeItemSlotResponse
	19,  // 19: gameMessageCore.Envelope.signin_player_request:type_name -> gameMessageCore.SigninPlayerRequest
	20,  // 20: gameMessageCore.Envelope.signin_player_response:type_name -> gameMessageCore.SigninPlayerResponse
	21,  // 21: gameMessageCore.Envelope.sign_out_player_request:type_name -> gameMessageCore.SignOutPlayerRequest
	22,  // 22: gameMessageCore.Envelope.sign_out_player_response:type_name -> gameMessageCore.SignOutPlayerResponse
	25,  // 23: gameMessageCore.Envelope.upgrade_player_level_request:type_name -> gameMessageCore.UpgradePlayerLevelRequest
	26,  // 24: gameMessageCore.Envelope.upgrade_player_level_response:type_name -> gameMessageCore.UpgradePlayerLevelResponse
	27,  // 25: gameMessageCore.Envelope.query_player_request:type_name -> gameMessageCore.QueryPlayerRequest
	28,  // 26: gameMessageCore.Envelope.query_player_response:type_name -> gameMessageCore.QueryPlayerResponse
	29,  // 27: gameMessageCore.Envelope.create_player_request:type_name -> gameMessageCore.CreatePlayerRequest
	30,  // 28: gameMessageCore.Envelope.create_player_response:type_name -> gameMessageCore.CreatePlayerResponse
	31,  // 29: gameMessageCore.Envelope.enter_map_request:type_name -> gameMessageCore.EnterMapRequest
	32,  // 30: gameMessageCore.Envelope.enter_map_response:type_name -> gameMessageCore.EnterMapResponse
	33,  // 31: gameMessageCore.Envelope.update_self_location_request:type_name -> gameMessageCore.UpdateSelfLocationRequest
	34,  // 32: gameMessageCore.Envelope.update_self_location_response:type_name -> gameMessageCore.UpdateSelfLocationResponse
	35,  // 33: gameMessageCore.Envelope.use_skill_request:type_name -> gameMessageCore.UseSkillRequest
	36,  // 34: gameMessageCore.Envelope.use_skill_response:type_name -> gameMessageCore.UseSkillResponse
	37,  // 35: gameMessageCore.Envelope.pick_falling_object_request:type_name -> gameMessageCore.PickFallingObjectRequest
	38,  // 36: gameMessageCore.Envelope.pick_falling_object_response:type_name -> gameMessageCore.PickFallingObjectResponse
	39,  // 37: gameMessageCore.Envelope.respawn_player_request:type_name -> gameMessageCore.RespawnPlayerRequest
	40,  // 38: gameMessageCore.Envelope.respawn_player_response:type_name -> gameMessageCore.RespawnPlayerResponse
	42,  // 39: gameMessageCore.Envelope.broad_cast_init_map_element_response:type_name -> gameMessageCore.BroadCastInitMapElementResponse
	44,  // 40: gameMessageCore.Envelope.broad_cast_map_entity_update_response:type_name -> gameMessageCore.BroadCastMapEntityUpdateResponse
	46,  // 41: gameMessageCore.Envelope.broad_cast_entity_destroy_response:type_name -> gameMessageCore.BroadCastEntityDestroyResponse
	45,  // 42: gameMessageCore.Envelope.broad_cast_entity_move_response:type_name -> gameMessageCore.BroadCastEntityMoveResponse
	47,  // 43: gameMessageCore.Envelope.broad_cast_entity_combat_response:type_name -> gameMessageCore.BroadCastEntityCombatResponse
	41,  // 44: gameMessageCore.Envelope.broad_cast_respawn_player_response:type_name -> gameMessageCore.BroadCastRespawnPlayerResponse
	48,  // 45: gameMessageCore.Envelope.teleport_request:type_name -> gameMessageCore.TeleportRequest
	49,  // 46: gameMessageCore.Envelope.teleport_response:type_name -> gameMessageCore.TeleportResponse
	23,  // 47: gameMessageCore.Envelope.broad_cast_entity_profile_update_response:type_name -> gameMessageCore.BroadCastEntityProfileUpdateResponse
	24,  // 48: gameMessageCore.Envelope.broad_cast_monster_death_response:type_name -> gameMessageCore.BroadCastMonsterDeathResponse
	50,  // 49: gameMessageCore.Envelope.self_tasks_request:type_name -> gameMessageCore.SelfTasksRequest
	51,  // 50: gameMessageCore.Envelope.self_tasks_response:type_name -> gameMessageCore.SelfTasksResponse
	52,  // 51: gameMessageCore.Envelope.broad_cast_update_task_list_response:type_name -> gameMessageCore.BroadCastUpdateTaskListResponse
	53,  // 52: gameMessageCore.Envelope.accept_task_request:type_name -> gameMessageCore.AcceptTaskRequest
	54,  // 53: gameMessageCore.Envelope.accept_task_response:type_name -> gameMessageCore.AcceptTaskResponse
	55,  // 54: gameMessageCore.Envelope.abandonment_task_request:type_name -> gameMessageCore.AbandonmentTaskRequest
	56,  // 55: gameMessageCore.Envelope.abandonment_task_response:type_name -> gameMessageCore.AbandonmentTaskResponse
	57,  // 56: gameMessageCore.Envelope.task_reward_request:type_name -> gameMessageCore.TaskRewardRequest
	58,  // 57: gameMessageCore.Envelope.task_reward_response:type_name -> gameMessageCore.TaskRewardResponse
	59,  // 58: gameMessageCore.Envelope.task_list_reward_request:type_name -> gameMessageCore.TaskListRewardRequest
	60,  // 59: gameMessageCore.Envelope.task_list_reward_response:type_name -> gameMessageCore.TaskListRewardResponse
	61,  // 60: gameMessageCore.Envelope.upgrade_task_progress_request:type_name -> gameMessageCore.UpgradeTaskProgressRequest
	62,  // 61: gameMessageCore.Envelope.upgrade_task_progress_response:type_name -> gameMessageCore.UpgradeTaskProgressResponse
	63,  // 62: gameMessageCore.Envelope.broad_cast_task_reward_response:type_name -> gameMessageCore.BroadCastTaskRewardResponse
	64,  // 63: gameMessageCore.Envelope.send_chat_message_request:type_name -> gameMessageCore.SendChatMessageRequest
	65,  // 64: gameMessageCore.Envelope.send_chat_message_response:type_name -> gameMessageCore.SendChatMessageResponse
	66,  // 65: gameMessageCore.Envelope.broad_cast_chat_messages_response:type_name -> gameMessageCore.BroadCastChatMessagesResponse
	67,  // 66: gameMessageCore.Envelope.broad_cast_remove_chat_message_response:type_name -> gameMessageCore.BroadCastRemoveChatMessageResponse
	68,  // 67: gameMessageCore.Envelope.broad_cast_update_chat_state_response:type_name -> gameMessageCore.BroadCastUpdateChatStateResponse
	69,  // 68: gameMessageCore.Envelope.ping_request:type_name -> gameMessageCore.PingRequest
	70,  // 69: gameMessageCore.Envelope.ping_response:type_name -> gameMessageCore.PingResponse
	72,  // 70: gameMessageCore.ItemGetResponse.items:type_name -> gameMessageCore.Item
	73,  // 71: gameMessageCore.UpdateAvatarRequest.position:type_name -> gameMessageCore.AvatarPosition
	72,  // 72: gameMessageCore.BroadCastItemAddResponse.items:type_name -> gameMessageCore.Item
	72,  // 73: gameMessageCore.BroadCastItemUpdateResponse.items:type_name -> gameMessageCore.Item
	72,  // 74: gameMessageCore.BroadCastItemDelResponse.items:type_name -> gameMessageCore.Item
	74,  // 75: gameMessageCore.BroadCastUpdateItemSlotResponse.slots:type_name -> gameMessageCore.ItemSlot
	74,  // 76: gameMessageCore.GetItemSlotResponse.slots:type_name -> gameMessageCore.ItemSlot
	73,  // 77: gameMessageCore.UpgradeItemSlotRequest.position:type_name -> gameMessageCore.AvatarPosition
	74,  // 78: gameMessageCore.UpgradeItemSlotResponse.slots:type_name -> gameMessageCore.ItemSlot
	75,  // 79: gameMessageCore.SigninPlayerRequest.os_type:type_name -> gameMessageCore.OSType
	76,  // 80: gameMessageCore.SigninPlayerRequest.platform:type_name -> gameMessageCore.PlatformType
	77,  // 81: gameMessageCore.SigninPlayerResponse.player:type_name -> gameMessageCore.Player
	78,  // 82: gameMessageCore.BroadCastEntityProfileUpdateResponse.entity_id:type_name -> gameMessageCore.EntityId
	79,  // 83: gameMessageCore.BroadCastEntityProfileUpdateResponse.profiles:type_name -> gameMessageCore.EntityProfileUpdate
	80,  // 84: gameMessageCore.BroadCastMonsterDeathResponse.pos:type_name -> gameMessageCore.Vector3
	81,  // 85: gameMessageCore.BroadCastMonsterDeathResponse.drop_list:type_name -> gameMessageCore.ItemBaseInfo
	82,  // 86: gameMessageCore.QueryPlayerResponse.player:type_name -> gameMessageCore.PlayerBaseData
	83,  // 87: gameMessageCore.CreatePlayerRequest.feature:type_name -> gameMessageCore.PlayerFeature
	75,  // 88: gameMessageCore.CreatePlayerRequest.os_type:type_name -> gameMessageCore.OSType
	76,  // 89: gameMessageCore.CreatePlayerRequest.platform:type_name -> gameMessageCore.PlatformType
	82,  // 90: gameMessageCore.CreatePlayerResponse.player:type_name -> gameMessageCore.PlayerBaseData
	77,  // 91: gameMessageCore.EnterMapResponse.me:type_name -> gameMessageCore.Player
	84,  // 92: gameMessageCore.EnterMapResponse.location:type_name -> gameMessageCore.EntityLocation
	85,  // 93: gameMessageCore.UpdateSelfLocationRequest.movement:type_name -> gameMessageCore.EntityMovement
	85,  // 94: gameMessageCore.UpdateSelfLocationResponse.movement:type_name -> gameMessageCore.EntityMovement
	84,  // 95: gameMessageCore.UseSkillRequest.dir:type_name -> gameMessageCore.EntityLocation
	84,  // 96: gameMessageCore.UseSkillRequest.from_location:type_name -> gameMessageCore.EntityLocation
	78,  // 97: gameMessageCore.UseSkillRequest.target_id:type_name -> gameMessageCore.EntityId
	86,  // 98: gameMessageCore.PickFallingObjectResponse.falling_objects:type_name -> gameMessageCore.FallingObject
	77,  // 99: gameMessageCore.PickFallingObjectResponse.pickup_player:type_name -> gameMessageCore.Player
	87,  // 100: gameMessageCore.RespawnPlayerRequest.respawn_point:type_name -> gameMessageCore.PlayerRespawnPoint
	84,  // 101: gameMessageCore.RespawnPlayerResponse.location:type_name -> gameMessageCore.EntityLocation
	84,  // 102: gameMessageCore.BroadCastRespawnPlayerResponse.location:type_name -> gameMessageCore.EntityLocation
	88,  // 103: gameMessageCore.BroadCastInitMapElementResponse.entity:type_name -> gameMessageCore.EntityWithLocation
	86,  // 104: gameMessageCore.BroadCastFallingObjectPickedResponse.falling_objects:type_name -> gameMessageCore.FallingObject
	78,  // 105: gameMessageCore.BroadCastFallingObjectPickedResponse.entity_id:type_name -> gameMessageCore.EntityId
	88,  // 106: gameMessageCore.BroadCastMapEntityUpdateResponse.entity_added:type_name -> gameMessageCore.EntityWithLocation
	78,  // 107: gameMessageCore.BroadCastMapEntityUpdateResponse.entity_removed:type_name -> gameMessageCore.EntityId
	85,  // 108: gameMessageCore.BroadCastEntityMoveResponse.moves:type_name -> gameMessageCore.EntityMovement
	78,  // 109: gameMessageCore.BroadCastEntityDestroyResponse.entities:type_name -> gameMessageCore.EntityId
	89,  // 110: gameMessageCore.BroadCastEntityCombatResponse.state:type_name -> gameMessageCore.EntityCombatState
	78,  // 111: gameMessageCore.BroadCastEntityCombatResponse.from_entity:type_name -> gameMessageCore.EntityId
	84,  // 112: gameMessageCore.BroadCastEntityCombatResponse.dir:type_name -> gameMessageCore.EntityLocation
	84,  // 113: gameMessageCore.BroadCastEntityCombatResponse.from_location:type_name -> gameMessageCore.EntityLocation
	90,  // 114: gameMessageCore.BroadCastEntityCombatResponse.targets:type_name -> gameMessageCore.EntityDamage
	80,  // 115: gameMessageCore.TeleportRequest.to_pos:type_name -> gameMessageCore.Vector3
	91,  // 116: gameMessageCore.SelfTasksResponse.tasks:type_name -> gameMessageCore.PlayerTask
	92,  // 117: gameMessageCore.BroadCastUpdateTaskListResponse.kind:type_name -> gameMessageCore.TaskListType
	93,  // 118: gameMessageCore.BroadCastUpdateTaskListResponse.task_list_info:type_name -> gameMessageCore.TaskList
	92,  // 119: gameMessageCore.AcceptTaskRequest.kind:type_name -> gameMessageCore.TaskListType
	93,  // 120: gameMessageCore.AcceptTaskResponse.task_list_info:type_name -> gameMessageCore.TaskList
	92,  // 121: gameMessageCore.AbandonmentTaskRequest.kind:type_name -> gameMessageCore.TaskListType
	93,  // 122: gameMessageCore.AbandonmentTaskResponse.task_list_info:type_name -> gameMessageCore.TaskList
	92,  // 123: gameMessageCore.TaskRewardRequest.task_list_kind:type_name -> gameMessageCore.TaskListType
	93,  // 124: gameMessageCore.TaskRewardResponse.task_list_info:type_name -> gameMessageCore.TaskList
	92,  // 125: gameMessageCore.TaskListRewardRequest.kind:type_name -> gameMessageCore.TaskListType
	93,  // 126: gameMessageCore.TaskListRewardResponse.task_list_info:type_name -> gameMessageCore.TaskList
	92,  // 127: gameMessageCore.UpgradeTaskProgressRequest.task_list_kind:type_name -> gameMessageCore.TaskListType
	94,  // 128: gameMessageCore.UpgradeTaskProgressRequest.items:type_name -> gameMessageCore.TaskOptionItem
	95,  // 129: gameMessageCore.UpgradeTaskProgressRequest.pos:type_name -> gameMessageCore.TaskOptionMoveTo
	96,  // 130: gameMessageCore.UpgradeTaskProgressRequest.quiz:type_name -> gameMessageCore.TaskOptionQuiz
	92,  // 131: gameMessageCore.BroadCastTaskRewardResponse.task_list_kind:type_name -> gameMessageCore.TaskListType
	81,  // 132: gameMessageCore.BroadCastTaskRewardResponse.reward_item:type_name -> gameMessageCore.ItemBaseInfo
	97,  // 133: gameMessageCore.SendChatMessageRequest.chat_type:type_name -> gameMessageCore.ChatChannelType
	98,  // 134: gameMessageCore.BroadCastChatMessagesResponse.messages:type_name -> gameMessageCore.ChatMessage
	99,  // 135: gameMessageCore.BroadCastUpdateChatStateResponse.chat_state:type_name -> gameMessageCore.ChatState
	136, // [136:136] is the sub-list for method output_type
	136, // [136:136] is the sub-list for method input_type
	136, // [136:136] is the sub-list for extension type_name
	136, // [136:136] is the sub-list for extension extendee
	0,   // [0:136] is the sub-list for field type_name
}

func init() { file_message_body_proto_init() }
func file_message_body_proto_init() {
	if File_message_body_proto != nil {
		return
	}
	file_message_cmd_proto_init()
	file_player_proto_init()
	file_os_proto_init()
	file_platform_proto_init()
	file_item_proto_init()
	file_item_slot_proto_init()
	file_entity_proto_init()
	file_entityProfile_proto_init()
	file_skill_proto_init()
	file_task_proto_init()
	file_chat_proto_init()
	file_vector_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_message_body_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Envelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemDropRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemDropResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnloadAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnloadAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastItemAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastItemUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastItemDelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastUpdateItemSlotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemSlotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeItemSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeItemSlotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigninPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigninPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOutPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOutPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastEntityProfileUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastMonsterDeathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradePlayerLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradePlayerLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterMapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterMapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSelfLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSelfLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseSkillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseSkillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickFallingObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickFallingObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespawnPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespawnPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastRespawnPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastInitMapElementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastFallingObjectPickedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastMapEntityUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastEntityMoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastEntityDestroyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastEntityCombatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeleportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeleportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastUpdateTaskListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbandonmentTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbandonmentTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeTaskProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeTaskProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastTaskRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastChatMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastRemoveChatMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastUpdateChatStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_body_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Envelope_ItemGetRequest)(nil),
		(*Envelope_ItemGetResponse)(nil),
		(*Envelope_ItemUseRequest)(nil),
		(*Envelope_ItemUseResponse)(nil),
		(*Envelope_ItemDropRequest)(nil),
		(*Envelope_ItemDropResponse)(nil),
		(*Envelope_UpdateAvatarRequest)(nil),
		(*Envelope_UpdateAvatarResponse)(nil),
		(*Envelope_UnloadAvatarRequest)(nil),
		(*Envelope_UnloadAvatarResponse)(nil),
		(*Envelope_BroadCastItemAddResponse)(nil),
		(*Envelope_BroadCastItemUpdateResponse)(nil),
		(*Envelope_BroadCastItemDelResponse)(nil),
		(*Envelope_BroadCastUpdateItemSlotResponse)(nil),
		(*Envelope_GetItemSlotRequest)(nil),
		(*Envelope_GetItemSlotResponse)(nil),
		(*Envelope_UpgradeItemSlotRequest)(nil),
		(*Envelope_UpgradeItemSlotResponse)(nil),
		(*Envelope_SigninPlayerRequest)(nil),
		(*Envelope_SigninPlayerResponse)(nil),
		(*Envelope_SignOutPlayerRequest)(nil),
		(*Envelope_SignOutPlayerResponse)(nil),
		(*Envelope_UpgradePlayerLevelRequest)(nil),
		(*Envelope_UpgradePlayerLevelResponse)(nil),
		(*Envelope_QueryPlayerRequest)(nil),
		(*Envelope_QueryPlayerResponse)(nil),
		(*Envelope_CreatePlayerRequest)(nil),
		(*Envelope_CreatePlayerResponse)(nil),
		(*Envelope_EnterMapRequest)(nil),
		(*Envelope_EnterMapResponse)(nil),
		(*Envelope_UpdateSelfLocationRequest)(nil),
		(*Envelope_UpdateSelfLocationResponse)(nil),
		(*Envelope_UseSkillRequest)(nil),
		(*Envelope_UseSkillResponse)(nil),
		(*Envelope_PickFallingObjectRequest)(nil),
		(*Envelope_PickFallingObjectResponse)(nil),
		(*Envelope_RespawnPlayerRequest)(nil),
		(*Envelope_RespawnPlayerResponse)(nil),
		(*Envelope_BroadCastInitMapElementResponse)(nil),
		(*Envelope_BroadCastMapEntityUpdateResponse)(nil),
		(*Envelope_BroadCastEntityDestroyResponse)(nil),
		(*Envelope_BroadCastEntityMoveResponse)(nil),
		(*Envelope_BroadCastEntityCombatResponse)(nil),
		(*Envelope_BroadCastRespawnPlayerResponse)(nil),
		(*Envelope_TeleportRequest)(nil),
		(*Envelope_TeleportResponse)(nil),
		(*Envelope_BroadCastEntityProfileUpdateResponse)(nil),
		(*Envelope_BroadCastMonsterDeathResponse)(nil),
		(*Envelope_SelfTasksRequest)(nil),
		(*Envelope_SelfTasksResponse)(nil),
		(*Envelope_BroadCastUpdateTaskListResponse)(nil),
		(*Envelope_AcceptTaskRequest)(nil),
		(*Envelope_AcceptTaskResponse)(nil),
		(*Envelope_AbandonmentTaskRequest)(nil),
		(*Envelope_AbandonmentTaskResponse)(nil),
		(*Envelope_TaskRewardRequest)(nil),
		(*Envelope_TaskRewardResponse)(nil),
		(*Envelope_TaskListRewardRequest)(nil),
		(*Envelope_TaskListRewardResponse)(nil),
		(*Envelope_UpgradeTaskProgressRequest)(nil),
		(*Envelope_UpgradeTaskProgressResponse)(nil),
		(*Envelope_BroadCastTaskRewardResponse)(nil),
		(*Envelope_SendChatMessageRequest)(nil),
		(*Envelope_SendChatMessageResponse)(nil),
		(*Envelope_BroadCastChatMessagesResponse)(nil),
		(*Envelope_BroadCastRemoveChatMessageResponse)(nil),
		(*Envelope_BroadCastUpdateChatStateResponse)(nil),
		(*Envelope_PingRequest)(nil),
		(*Envelope_PingResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_body_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   71,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_body_proto_goTypes,
		DependencyIndexes: file_message_body_proto_depIdxs,
		MessageInfos:      file_message_body_proto_msgTypes,
	}.Build()
	File_message_body_proto = out.File
	file_message_body_proto_rawDesc = nil
	file_message_body_proto_goTypes = nil
	file_message_body_proto_depIdxs = nil
}
