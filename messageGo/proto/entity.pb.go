// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: entity.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MovementType int32

const (
	MovementType_MovementTypeUnknown MovementType = 0
	// 行走
	MovementType_MovementTypeWalk MovementType = 1
	// 奔跑
	MovementType_MovementTypeRun MovementType = 2
	// 保持现在的外观移动
	MovementType_MovementTypeIdle MovementType = 3
)

// Enum value maps for MovementType.
var (
	MovementType_name = map[int32]string{
		0: "MovementTypeUnknown",
		1: "MovementTypeWalk",
		2: "MovementTypeRun",
		3: "MovementTypeIdle",
	}
	MovementType_value = map[string]int32{
		"MovementTypeUnknown": 0,
		"MovementTypeWalk":    1,
		"MovementTypeRun":     2,
		"MovementTypeIdle":    3,
	}
)

func (x MovementType) Enum() *MovementType {
	p := new(MovementType)
	*p = x
	return p
}

func (x MovementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovementType) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_proto_enumTypes[0].Descriptor()
}

func (MovementType) Type() protoreflect.EnumType {
	return &file_entity_proto_enumTypes[0]
}

func (x MovementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovementType.Descriptor instead.
func (MovementType) EnumDescriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{0}
}

/// ************************* entity data ***************************************************
type EntityProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 等级
	Lv int32 `protobuf:"varint,1,opt,name=lv,proto3" json:"lv,omitempty"`
	// 经验值
	Exp string `protobuf:"bytes,2,opt,name=exp,proto3" json:"exp,omitempty"`
	// 攻击力
	Att int32 `protobuf:"varint,3,opt,name=att,proto3" json:"att,omitempty"`
	// 攻击速率
	AttSpeed int32 `protobuf:"varint,4,opt,name=att_speed,json=attSpeed,proto3" json:"att_speed,omitempty"`
	// 防御力
	Def int32 `protobuf:"varint,5,opt,name=def,proto3" json:"def,omitempty"`
	// 当前血量
	HpCurrent int32 `protobuf:"varint,6,opt,name=hp_current,json=hpCurrent,proto3" json:"hp_current,omitempty"`
	// 血量上限
	HpLimit int32 `protobuf:"varint,7,opt,name=hp_limit,json=hpLimit,proto3" json:"hp_limit,omitempty"`
	// 暴击(Critical Strikes)率
	CritRate int32 `protobuf:"varint,8,opt,name=crit_rate,json=critRate,proto3" json:"crit_rate,omitempty"`
	// 暴击伤害
	CritDmg int32 `protobuf:"varint,9,opt,name=crit_dmg,json=critDmg,proto3" json:"crit_dmg,omitempty"`
	// 名中率
	HitRate int32 `protobuf:"varint,10,opt,name=hit_rate,json=hitRate,proto3" json:"hit_rate,omitempty"`
	// 闪避率
	MissRate int32 `protobuf:"varint,11,opt,name=miss_rate,json=missRate,proto3" json:"miss_rate,omitempty"`
	// 移动速度
	MoveSpeed float32 `protobuf:"fixed32,12,opt,name=move_speed,json=moveSpeed,proto3" json:"move_speed,omitempty"`
	// 击退伤害
	PushDmg int32 `protobuf:"varint,13,opt,name=push_dmg,json=pushDmg,proto3" json:"push_dmg,omitempty"`
	// 击退距离
	PushDist int32 `protobuf:"varint,14,opt,name=push_dist,json=pushDist,proto3" json:"push_dist,omitempty"`
	// HP恢复
	HpRecovery int32 `protobuf:"varint,21,opt,name=hp_recovery,json=hpRecovery,proto3" json:"hp_recovery,omitempty"`
}

func (x *EntityProfile) Reset() {
	*x = EntityProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityProfile) ProtoMessage() {}

func (x *EntityProfile) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityProfile.ProtoReflect.Descriptor instead.
func (*EntityProfile) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{0}
}

func (x *EntityProfile) GetLv() int32 {
	if x != nil {
		return x.Lv
	}
	return 0
}

func (x *EntityProfile) GetExp() string {
	if x != nil {
		return x.Exp
	}
	return ""
}

func (x *EntityProfile) GetAtt() int32 {
	if x != nil {
		return x.Att
	}
	return 0
}

func (x *EntityProfile) GetAttSpeed() int32 {
	if x != nil {
		return x.AttSpeed
	}
	return 0
}

func (x *EntityProfile) GetDef() int32 {
	if x != nil {
		return x.Def
	}
	return 0
}

func (x *EntityProfile) GetHpCurrent() int32 {
	if x != nil {
		return x.HpCurrent
	}
	return 0
}

func (x *EntityProfile) GetHpLimit() int32 {
	if x != nil {
		return x.HpLimit
	}
	return 0
}

func (x *EntityProfile) GetCritRate() int32 {
	if x != nil {
		return x.CritRate
	}
	return 0
}

func (x *EntityProfile) GetCritDmg() int32 {
	if x != nil {
		return x.CritDmg
	}
	return 0
}

func (x *EntityProfile) GetHitRate() int32 {
	if x != nil {
		return x.HitRate
	}
	return 0
}

func (x *EntityProfile) GetMissRate() int32 {
	if x != nil {
		return x.MissRate
	}
	return 0
}

func (x *EntityProfile) GetMoveSpeed() float32 {
	if x != nil {
		return x.MoveSpeed
	}
	return 0
}

func (x *EntityProfile) GetPushDmg() int32 {
	if x != nil {
		return x.PushDmg
	}
	return 0
}

func (x *EntityProfile) GetPushDist() int32 {
	if x != nil {
		return x.PushDist
	}
	return 0
}

func (x *EntityProfile) GetHpRecovery() int32 {
	if x != nil {
		return x.HpRecovery
	}
	return 0
}

type EntityId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type EntityType `protobuf:"varint,1,opt,name=type,proto3,enum=gameMessageCore.EntityType" json:"type,omitempty"`
	Id   int64      `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EntityId) Reset() {
	*x = EntityId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityId) ProtoMessage() {}

func (x *EntityId) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityId.ProtoReflect.Descriptor instead.
func (*EntityId) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{1}
}

func (x *EntityId) GetType() EntityType {
	if x != nil {
		return x.Type
	}
	return EntityType_EntityTypeAll
}

func (x *EntityId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type EntityLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 对象所在地图 id
	MapId int32 `protobuf:"varint,1,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	// 坐标
	Loc *Vector3 `protobuf:"bytes,2,opt,name=loc,proto3" json:"loc,omitempty"`
}

func (x *EntityLocation) Reset() {
	*x = EntityLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityLocation) ProtoMessage() {}

func (x *EntityLocation) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityLocation.ProtoReflect.Descriptor instead.
func (*EntityLocation) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{2}
}

func (x *EntityLocation) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *EntityLocation) GetLoc() *Vector3 {
	if x != nil {
		return x.Loc
	}
	return nil
}

type EntityWithLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId *EntityId `protobuf:"bytes,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	// Types that are assignable to Entity:
	//	*EntityWithLocation_Player
	//	*EntityWithLocation_Monster
	//	*EntityWithLocation_FallingObject
	Entity isEntityWithLocation_Entity `protobuf_oneof:"entity"`
}

func (x *EntityWithLocation) Reset() {
	*x = EntityWithLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityWithLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityWithLocation) ProtoMessage() {}

func (x *EntityWithLocation) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityWithLocation.ProtoReflect.Descriptor instead.
func (*EntityWithLocation) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{3}
}

func (x *EntityWithLocation) GetTypeId() *EntityId {
	if x != nil {
		return x.TypeId
	}
	return nil
}

func (m *EntityWithLocation) GetEntity() isEntityWithLocation_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (x *EntityWithLocation) GetPlayer() *Player {
	if x, ok := x.GetEntity().(*EntityWithLocation_Player); ok {
		return x.Player
	}
	return nil
}

func (x *EntityWithLocation) GetMonster() *Monster {
	if x, ok := x.GetEntity().(*EntityWithLocation_Monster); ok {
		return x.Monster
	}
	return nil
}

func (x *EntityWithLocation) GetFallingObject() *FallingObject {
	if x, ok := x.GetEntity().(*EntityWithLocation_FallingObject); ok {
		return x.FallingObject
	}
	return nil
}

type isEntityWithLocation_Entity interface {
	isEntityWithLocation_Entity()
}

type EntityWithLocation_Player struct {
	Player *Player `protobuf:"bytes,10,opt,name=player,proto3,oneof"`
}

type EntityWithLocation_Monster struct {
	Monster *Monster `protobuf:"bytes,11,opt,name=monster,proto3,oneof"`
}

type EntityWithLocation_FallingObject struct {
	FallingObject *FallingObject `protobuf:"bytes,12,opt,name=falling_object,json=fallingObject,proto3,oneof"`
}

func (*EntityWithLocation_Player) isEntityWithLocation_Entity() {}

func (*EntityWithLocation_Monster) isEntityWithLocation_Entity() {}

func (*EntityWithLocation_FallingObject) isEntityWithLocation_Entity() {}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseData *PlayerBaseData `protobuf:"bytes,1,opt,name=base_data,json=baseData,proto3" json:"base_data,omitempty"`
	Profile  *EntityProfile  `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"` // 玩家属性
	Avatars  []*PlayerAvatar `protobuf:"bytes,3,rep,name=avatars,proto3" json:"avatars,omitempty"` // 玩家 avatar
	Active   bool            `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	MapId    int32           `protobuf:"varint,5,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	Position *Vector3        `protobuf:"bytes,6,opt,name=position,proto3" json:"position,omitempty"`
	Dir      *Vector3        `protobuf:"bytes,7,opt,name=dir,proto3" json:"dir,omitempty"` // repeated bian.proto.EntityBuff buff_list = 28;
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{4}
}

func (x *Player) GetBaseData() *PlayerBaseData {
	if x != nil {
		return x.BaseData
	}
	return nil
}

func (x *Player) GetProfile() *EntityProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Player) GetAvatars() []*PlayerAvatar {
	if x != nil {
		return x.Avatars
	}
	return nil
}

func (x *Player) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Player) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *Player) GetPosition() *Vector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Player) GetDir() *Vector3 {
	if x != nil {
		return x.Dir
	}
	return nil
}

type Monster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid      int32          `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Id       int64          `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Active   bool           `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Profile  *EntityProfile `protobuf:"bytes,4,opt,name=profile,proto3" json:"profile,omitempty"`
	Position *Vector3       `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`
	Dir      *Vector3       `protobuf:"bytes,6,opt,name=dir,proto3" json:"dir,omitempty"` // 方向（朝向）
}

func (x *Monster) Reset() {
	*x = Monster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Monster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monster) ProtoMessage() {}

func (x *Monster) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monster.ProtoReflect.Descriptor instead.
func (*Monster) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{5}
}

func (x *Monster) GetCid() int32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Monster) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Monster) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Monster) GetProfile() *EntityProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Monster) GetPosition() *Vector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Monster) GetDir() *Vector3 {
	if x != nil {
		return x.Dir
	}
	return nil
}

// 掉落物
type FallingObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid      int32    `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Id       int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Num      int32    `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	Owner    int64    `protobuf:"varint,4,opt,name=owner,proto3" json:"owner,omitempty"`
	Position *Vector3 `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`
	Dir      *Vector3 `protobuf:"bytes,6,opt,name=dir,proto3" json:"dir,omitempty"`          // 方向（朝向）
	Quality  int32    `protobuf:"varint,7,opt,name=quality,proto3" json:"quality,omitempty"` // 品质
}

func (x *FallingObject) Reset() {
	*x = FallingObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FallingObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FallingObject) ProtoMessage() {}

func (x *FallingObject) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FallingObject.ProtoReflect.Descriptor instead.
func (*FallingObject) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{6}
}

func (x *FallingObject) GetCid() int32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *FallingObject) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FallingObject) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *FallingObject) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *FallingObject) GetPosition() *Vector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *FallingObject) GetDir() *Vector3 {
	if x != nil {
		return x.Dir
	}
	return nil
}

func (x *FallingObject) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

/// ************************* move info ***************************************************
// 玩家 怪物 移动位置信息
type EntityMoveStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 目标点
	Location *EntityLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	// 到达目标点的时间戳 ms
	Stamp int64 `protobuf:"varint,2,opt,name=stamp,proto3" json:"stamp,omitempty"`
}

func (x *EntityMoveStep) Reset() {
	*x = EntityMoveStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityMoveStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityMoveStep) ProtoMessage() {}

func (x *EntityMoveStep) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityMoveStep.ProtoReflect.Descriptor instead.
func (*EntityMoveStep) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{7}
}

func (x *EntityMoveStep) GetLocation() *EntityLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *EntityMoveStep) GetStamp() int64 {
	if x != nil {
		return x.Stamp
	}
	return 0
}

type EntityMovement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId EntityType `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3,enum=gameMessageCore.EntityType" json:"type_id,omitempty"`
	// 当前位置
	CurLocation *EntityMoveStep `protobuf:"bytes,2,opt,name=cur_location,json=curLocation,proto3" json:"cur_location,omitempty"`
	// 目标位置
	DestLocation *EntityMoveStep `protobuf:"bytes,3,opt,name=dest_location,json=destLocation,proto3" json:"dest_location,omitempty"`
	// 移动方式
	Type MovementType `protobuf:"varint,5,opt,name=type,proto3,enum=gameMessageCore.MovementType" json:"type,omitempty"`
	// 实体朝向(交互数据 = 实际数据 * 1000)
	Dir *Vector3 `protobuf:"bytes,6,opt,name=Dir,proto3" json:"Dir,omitempty"`
}

func (x *EntityMovement) Reset() {
	*x = EntityMovement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityMovement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityMovement) ProtoMessage() {}

func (x *EntityMovement) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityMovement.ProtoReflect.Descriptor instead.
func (*EntityMovement) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{8}
}

func (x *EntityMovement) GetTypeId() EntityType {
	if x != nil {
		return x.TypeId
	}
	return EntityType_EntityTypeAll
}

func (x *EntityMovement) GetCurLocation() *EntityMoveStep {
	if x != nil {
		return x.CurLocation
	}
	return nil
}

func (x *EntityMovement) GetDestLocation() *EntityMoveStep {
	if x != nil {
		return x.DestLocation
	}
	return nil
}

func (x *EntityMovement) GetType() MovementType {
	if x != nil {
		return x.Type
	}
	return MovementType_MovementTypeUnknown
}

func (x *EntityMovement) GetDir() *Vector3 {
	if x != nil {
		return x.Dir
	}
	return nil
}

var File_entity_proto protoreflect.FileDescriptor

var file_entity_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x1a,
	0x0c, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x94, 0x03, 0x0a, 0x0d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6c,
	0x76, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x78, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x74, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x61, 0x74, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x5f, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x74, 0x74, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x64, 0x65, 0x66, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x70, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x70, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x70, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x72, 0x69, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x72, 0x69, 0x74, 0x5f, 0x64, 0x6d, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63,
	0x72, 0x69, 0x74, 0x44, 0x6d, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x69, 0x74, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x69, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x73, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x73, 0x73, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x64, 0x6d, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x75, 0x73, 0x68, 0x44, 0x6d, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x64, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x75, 0x73,
	0x68, 0x44, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x70, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x70, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x22, 0x4b, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x03,
	0x6c, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x33, 0x52, 0x03, 0x6c, 0x6f, 0x63, 0x22, 0x84, 0x02, 0x0a, 0x12, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x32, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x06, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0e,
	0x66, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0xca, 0x02, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x62, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x52, 0x07, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x64, 0x69, 0x72, 0x22, 0xdf, 0x01, 0x0a,
	0x07, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x64, 0x69, 0x72, 0x22, 0xd5,
	0x01, 0x0a, 0x0d, 0x46, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x63, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x3b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xaf, 0x02, 0x0a, 0x0e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34,
	0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x0b, 0x63, 0x75, 0x72,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x74,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x65, 0x70,
	0x52, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x4d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x2a, 0x0a, 0x03, 0x44, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x44, 0x69, 0x72, 0x2a, 0x68, 0x0a,
	0x0c, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x13, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x57, 0x61, 0x6c, 0x6b, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x75, 0x6e, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x6c, 0x65, 0x10, 0x03, 0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x47, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entity_proto_rawDescOnce sync.Once
	file_entity_proto_rawDescData = file_entity_proto_rawDesc
)

func file_entity_proto_rawDescGZIP() []byte {
	file_entity_proto_rawDescOnce.Do(func() {
		file_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_entity_proto_rawDescData)
	})
	return file_entity_proto_rawDescData
}

var file_entity_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_entity_proto_goTypes = []interface{}{
	(MovementType)(0),          // 0: gameMessageCore.MovementType
	(*EntityProfile)(nil),      // 1: gameMessageCore.EntityProfile
	(*EntityId)(nil),           // 2: gameMessageCore.EntityId
	(*EntityLocation)(nil),     // 3: gameMessageCore.EntityLocation
	(*EntityWithLocation)(nil), // 4: gameMessageCore.EntityWithLocation
	(*Player)(nil),             // 5: gameMessageCore.Player
	(*Monster)(nil),            // 6: gameMessageCore.Monster
	(*FallingObject)(nil),      // 7: gameMessageCore.FallingObject
	(*EntityMoveStep)(nil),     // 8: gameMessageCore.EntityMoveStep
	(*EntityMovement)(nil),     // 9: gameMessageCore.EntityMovement
	(EntityType)(0),            // 10: gameMessageCore.EntityType
	(*Vector3)(nil),            // 11: gameMessageCore.Vector3
	(*PlayerBaseData)(nil),     // 12: gameMessageCore.PlayerBaseData
	(*PlayerAvatar)(nil),       // 13: gameMessageCore.PlayerAvatar
}
var file_entity_proto_depIdxs = []int32{
	10, // 0: gameMessageCore.EntityId.type:type_name -> gameMessageCore.EntityType
	11, // 1: gameMessageCore.EntityLocation.loc:type_name -> gameMessageCore.Vector3
	2,  // 2: gameMessageCore.EntityWithLocation.type_id:type_name -> gameMessageCore.EntityId
	5,  // 3: gameMessageCore.EntityWithLocation.player:type_name -> gameMessageCore.Player
	6,  // 4: gameMessageCore.EntityWithLocation.monster:type_name -> gameMessageCore.Monster
	7,  // 5: gameMessageCore.EntityWithLocation.falling_object:type_name -> gameMessageCore.FallingObject
	12, // 6: gameMessageCore.Player.base_data:type_name -> gameMessageCore.PlayerBaseData
	1,  // 7: gameMessageCore.Player.profile:type_name -> gameMessageCore.EntityProfile
	13, // 8: gameMessageCore.Player.avatars:type_name -> gameMessageCore.PlayerAvatar
	11, // 9: gameMessageCore.Player.position:type_name -> gameMessageCore.Vector3
	11, // 10: gameMessageCore.Player.dir:type_name -> gameMessageCore.Vector3
	1,  // 11: gameMessageCore.Monster.profile:type_name -> gameMessageCore.EntityProfile
	11, // 12: gameMessageCore.Monster.position:type_name -> gameMessageCore.Vector3
	11, // 13: gameMessageCore.Monster.dir:type_name -> gameMessageCore.Vector3
	11, // 14: gameMessageCore.FallingObject.position:type_name -> gameMessageCore.Vector3
	11, // 15: gameMessageCore.FallingObject.dir:type_name -> gameMessageCore.Vector3
	3,  // 16: gameMessageCore.EntityMoveStep.location:type_name -> gameMessageCore.EntityLocation
	10, // 17: gameMessageCore.EntityMovement.type_id:type_name -> gameMessageCore.EntityType
	8,  // 18: gameMessageCore.EntityMovement.cur_location:type_name -> gameMessageCore.EntityMoveStep
	8,  // 19: gameMessageCore.EntityMovement.dest_location:type_name -> gameMessageCore.EntityMoveStep
	0,  // 20: gameMessageCore.EntityMovement.type:type_name -> gameMessageCore.MovementType
	11, // 21: gameMessageCore.EntityMovement.Dir:type_name -> gameMessageCore.Vector3
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_entity_proto_init() }
func file_entity_proto_init() {
	if File_entity_proto != nil {
		return
	}
	file_vector_proto_init()
	file_entityTypeDefine_proto_init()
	file_player_proto_init()
	file_item_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityWithLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Monster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FallingObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityMoveStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityMovement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_entity_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*EntityWithLocation_Player)(nil),
		(*EntityWithLocation_Monster)(nil),
		(*EntityWithLocation_FallingObject)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entity_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entity_proto_goTypes,
		DependencyIndexes: file_entity_proto_depIdxs,
		EnumInfos:         file_entity_proto_enumTypes,
		MessageInfos:      file_entity_proto_msgTypes,
	}.Build()
	File_entity_proto = out.File
	file_entity_proto_rawDesc = nil
	file_entity_proto_goTypes = nil
	file_entity_proto_depIdxs = nil
}
