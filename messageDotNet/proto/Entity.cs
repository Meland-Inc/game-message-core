// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: entity.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GameMessageCore {

  /// <summary>Holder for reflection information generated from entity.proto</summary>
  public static partial class EntityReflection {

    #region Descriptor
    /// <summary>File descriptor for entity.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EntityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxlbnRpdHkucHJvdG8SD2dhbWVNZXNzYWdlQ29yZSKTAgoNRW50aXR5UHJv",
            "ZmlsZRIKCgJsdhgBIAEoBRILCgNleHAYAiABKAkSCwoDYXR0GAMgASgFEhEK",
            "CWF0dF9zcGVlZBgEIAEoBRILCgNkZWYYBSABKAUSEgoKaHBfY3VycmVudBgG",
            "IAEoBRIQCghocF9saW1pdBgHIAEoBRIRCgljcml0X3JhdGUYCCABKAUSEAoI",
            "Y3JpdF9kbWcYCSABKAUSEAoIaGl0X3JhdGUYCiABKAUSEQoJbWlzc19yYXRl",
            "GAsgASgFEhIKCm1vdmVfc3BlZWQYDCABKAISEAoIcHVzaF9kbWcYDSABKAUS",
            "EQoJcHVzaF9kaXN0GA4gASgFEhMKC2hwX3JlY292ZXJ5GBUgASgFYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessageCore.EntityProfile), global::GameMessageCore.EntityProfile.Parser, new[]{ "Lv", "Exp", "Att", "AttSpeed", "Def", "HpCurrent", "HpLimit", "CritRate", "CritDmg", "HitRate", "MissRate", "MoveSpeed", "PushDmg", "PushDist", "HpRecovery" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EntityProfile : pb::IMessage<EntityProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntityProfile> _parser = new pb::MessageParser<EntityProfile>(() => new EntityProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntityProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessageCore.EntityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityProfile(EntityProfile other) : this() {
      lv_ = other.lv_;
      exp_ = other.exp_;
      att_ = other.att_;
      attSpeed_ = other.attSpeed_;
      def_ = other.def_;
      hpCurrent_ = other.hpCurrent_;
      hpLimit_ = other.hpLimit_;
      critRate_ = other.critRate_;
      critDmg_ = other.critDmg_;
      hitRate_ = other.hitRate_;
      missRate_ = other.missRate_;
      moveSpeed_ = other.moveSpeed_;
      pushDmg_ = other.pushDmg_;
      pushDist_ = other.pushDist_;
      hpRecovery_ = other.hpRecovery_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntityProfile Clone() {
      return new EntityProfile(this);
    }

    /// <summary>Field number for the "lv" field.</summary>
    public const int LvFieldNumber = 1;
    private int lv_;
    /// <summary>
    /// 等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Lv {
      get { return lv_; }
      set {
        lv_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 2;
    private string exp_ = "";
    /// <summary>
    /// 经验值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Exp {
      get { return exp_; }
      set {
        exp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "att" field.</summary>
    public const int AttFieldNumber = 3;
    private int att_;
    /// <summary>
    /// 攻击力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Att {
      get { return att_; }
      set {
        att_ = value;
      }
    }

    /// <summary>Field number for the "att_speed" field.</summary>
    public const int AttSpeedFieldNumber = 4;
    private int attSpeed_;
    /// <summary>
    /// 攻击速率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttSpeed {
      get { return attSpeed_; }
      set {
        attSpeed_ = value;
      }
    }

    /// <summary>Field number for the "def" field.</summary>
    public const int DefFieldNumber = 5;
    private int def_;
    /// <summary>
    /// 防御力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Def {
      get { return def_; }
      set {
        def_ = value;
      }
    }

    /// <summary>Field number for the "hp_current" field.</summary>
    public const int HpCurrentFieldNumber = 6;
    private int hpCurrent_;
    /// <summary>
    /// 当前血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HpCurrent {
      get { return hpCurrent_; }
      set {
        hpCurrent_ = value;
      }
    }

    /// <summary>Field number for the "hp_limit" field.</summary>
    public const int HpLimitFieldNumber = 7;
    private int hpLimit_;
    /// <summary>
    /// 血量上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HpLimit {
      get { return hpLimit_; }
      set {
        hpLimit_ = value;
      }
    }

    /// <summary>Field number for the "crit_rate" field.</summary>
    public const int CritRateFieldNumber = 8;
    private int critRate_;
    /// <summary>
    /// 暴击(Critical Strikes)率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CritRate {
      get { return critRate_; }
      set {
        critRate_ = value;
      }
    }

    /// <summary>Field number for the "crit_dmg" field.</summary>
    public const int CritDmgFieldNumber = 9;
    private int critDmg_;
    /// <summary>
    /// 暴击伤害
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CritDmg {
      get { return critDmg_; }
      set {
        critDmg_ = value;
      }
    }

    /// <summary>Field number for the "hit_rate" field.</summary>
    public const int HitRateFieldNumber = 10;
    private int hitRate_;
    /// <summary>
    /// 名中率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitRate {
      get { return hitRate_; }
      set {
        hitRate_ = value;
      }
    }

    /// <summary>Field number for the "miss_rate" field.</summary>
    public const int MissRateFieldNumber = 11;
    private int missRate_;
    /// <summary>
    /// 闪避率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MissRate {
      get { return missRate_; }
      set {
        missRate_ = value;
      }
    }

    /// <summary>Field number for the "move_speed" field.</summary>
    public const int MoveSpeedFieldNumber = 12;
    private float moveSpeed_;
    /// <summary>
    /// 移动速度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MoveSpeed {
      get { return moveSpeed_; }
      set {
        moveSpeed_ = value;
      }
    }

    /// <summary>Field number for the "push_dmg" field.</summary>
    public const int PushDmgFieldNumber = 13;
    private int pushDmg_;
    /// <summary>
    /// 击退伤害
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PushDmg {
      get { return pushDmg_; }
      set {
        pushDmg_ = value;
      }
    }

    /// <summary>Field number for the "push_dist" field.</summary>
    public const int PushDistFieldNumber = 14;
    private int pushDist_;
    /// <summary>
    /// 击退距离
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PushDist {
      get { return pushDist_; }
      set {
        pushDist_ = value;
      }
    }

    /// <summary>Field number for the "hp_recovery" field.</summary>
    public const int HpRecoveryFieldNumber = 21;
    private int hpRecovery_;
    /// <summary>
    /// HP恢复
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HpRecovery {
      get { return hpRecovery_; }
      set {
        hpRecovery_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntityProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntityProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Lv != other.Lv) return false;
      if (Exp != other.Exp) return false;
      if (Att != other.Att) return false;
      if (AttSpeed != other.AttSpeed) return false;
      if (Def != other.Def) return false;
      if (HpCurrent != other.HpCurrent) return false;
      if (HpLimit != other.HpLimit) return false;
      if (CritRate != other.CritRate) return false;
      if (CritDmg != other.CritDmg) return false;
      if (HitRate != other.HitRate) return false;
      if (MissRate != other.MissRate) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MoveSpeed, other.MoveSpeed)) return false;
      if (PushDmg != other.PushDmg) return false;
      if (PushDist != other.PushDist) return false;
      if (HpRecovery != other.HpRecovery) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Lv != 0) hash ^= Lv.GetHashCode();
      if (Exp.Length != 0) hash ^= Exp.GetHashCode();
      if (Att != 0) hash ^= Att.GetHashCode();
      if (AttSpeed != 0) hash ^= AttSpeed.GetHashCode();
      if (Def != 0) hash ^= Def.GetHashCode();
      if (HpCurrent != 0) hash ^= HpCurrent.GetHashCode();
      if (HpLimit != 0) hash ^= HpLimit.GetHashCode();
      if (CritRate != 0) hash ^= CritRate.GetHashCode();
      if (CritDmg != 0) hash ^= CritDmg.GetHashCode();
      if (HitRate != 0) hash ^= HitRate.GetHashCode();
      if (MissRate != 0) hash ^= MissRate.GetHashCode();
      if (MoveSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MoveSpeed);
      if (PushDmg != 0) hash ^= PushDmg.GetHashCode();
      if (PushDist != 0) hash ^= PushDist.GetHashCode();
      if (HpRecovery != 0) hash ^= HpRecovery.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Lv != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Lv);
      }
      if (Exp.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Exp);
      }
      if (Att != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Att);
      }
      if (AttSpeed != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttSpeed);
      }
      if (Def != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Def);
      }
      if (HpCurrent != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HpCurrent);
      }
      if (HpLimit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HpLimit);
      }
      if (CritRate != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CritRate);
      }
      if (CritDmg != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritDmg);
      }
      if (HitRate != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(HitRate);
      }
      if (MissRate != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MissRate);
      }
      if (MoveSpeed != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(MoveSpeed);
      }
      if (PushDmg != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(PushDmg);
      }
      if (PushDist != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(PushDist);
      }
      if (HpRecovery != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(HpRecovery);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Lv != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Lv);
      }
      if (Exp.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Exp);
      }
      if (Att != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Att);
      }
      if (AttSpeed != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttSpeed);
      }
      if (Def != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Def);
      }
      if (HpCurrent != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HpCurrent);
      }
      if (HpLimit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HpLimit);
      }
      if (CritRate != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CritRate);
      }
      if (CritDmg != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritDmg);
      }
      if (HitRate != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(HitRate);
      }
      if (MissRate != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MissRate);
      }
      if (MoveSpeed != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(MoveSpeed);
      }
      if (PushDmg != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(PushDmg);
      }
      if (PushDist != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(PushDist);
      }
      if (HpRecovery != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(HpRecovery);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Lv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv);
      }
      if (Exp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exp);
      }
      if (Att != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Att);
      }
      if (AttSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttSpeed);
      }
      if (Def != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Def);
      }
      if (HpCurrent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpCurrent);
      }
      if (HpLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpLimit);
      }
      if (CritRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritRate);
      }
      if (CritDmg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritDmg);
      }
      if (HitRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitRate);
      }
      if (MissRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MissRate);
      }
      if (MoveSpeed != 0F) {
        size += 1 + 4;
      }
      if (PushDmg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PushDmg);
      }
      if (PushDist != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PushDist);
      }
      if (HpRecovery != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HpRecovery);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntityProfile other) {
      if (other == null) {
        return;
      }
      if (other.Lv != 0) {
        Lv = other.Lv;
      }
      if (other.Exp.Length != 0) {
        Exp = other.Exp;
      }
      if (other.Att != 0) {
        Att = other.Att;
      }
      if (other.AttSpeed != 0) {
        AttSpeed = other.AttSpeed;
      }
      if (other.Def != 0) {
        Def = other.Def;
      }
      if (other.HpCurrent != 0) {
        HpCurrent = other.HpCurrent;
      }
      if (other.HpLimit != 0) {
        HpLimit = other.HpLimit;
      }
      if (other.CritRate != 0) {
        CritRate = other.CritRate;
      }
      if (other.CritDmg != 0) {
        CritDmg = other.CritDmg;
      }
      if (other.HitRate != 0) {
        HitRate = other.HitRate;
      }
      if (other.MissRate != 0) {
        MissRate = other.MissRate;
      }
      if (other.MoveSpeed != 0F) {
        MoveSpeed = other.MoveSpeed;
      }
      if (other.PushDmg != 0) {
        PushDmg = other.PushDmg;
      }
      if (other.PushDist != 0) {
        PushDist = other.PushDist;
      }
      if (other.HpRecovery != 0) {
        HpRecovery = other.HpRecovery;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Lv = input.ReadInt32();
            break;
          }
          case 18: {
            Exp = input.ReadString();
            break;
          }
          case 24: {
            Att = input.ReadInt32();
            break;
          }
          case 32: {
            AttSpeed = input.ReadInt32();
            break;
          }
          case 40: {
            Def = input.ReadInt32();
            break;
          }
          case 48: {
            HpCurrent = input.ReadInt32();
            break;
          }
          case 56: {
            HpLimit = input.ReadInt32();
            break;
          }
          case 64: {
            CritRate = input.ReadInt32();
            break;
          }
          case 72: {
            CritDmg = input.ReadInt32();
            break;
          }
          case 80: {
            HitRate = input.ReadInt32();
            break;
          }
          case 88: {
            MissRate = input.ReadInt32();
            break;
          }
          case 101: {
            MoveSpeed = input.ReadFloat();
            break;
          }
          case 104: {
            PushDmg = input.ReadInt32();
            break;
          }
          case 112: {
            PushDist = input.ReadInt32();
            break;
          }
          case 168: {
            HpRecovery = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Lv = input.ReadInt32();
            break;
          }
          case 18: {
            Exp = input.ReadString();
            break;
          }
          case 24: {
            Att = input.ReadInt32();
            break;
          }
          case 32: {
            AttSpeed = input.ReadInt32();
            break;
          }
          case 40: {
            Def = input.ReadInt32();
            break;
          }
          case 48: {
            HpCurrent = input.ReadInt32();
            break;
          }
          case 56: {
            HpLimit = input.ReadInt32();
            break;
          }
          case 64: {
            CritRate = input.ReadInt32();
            break;
          }
          case 72: {
            CritDmg = input.ReadInt32();
            break;
          }
          case 80: {
            HitRate = input.ReadInt32();
            break;
          }
          case 88: {
            MissRate = input.ReadInt32();
            break;
          }
          case 101: {
            MoveSpeed = input.ReadFloat();
            break;
          }
          case 104: {
            PushDmg = input.ReadInt32();
            break;
          }
          case 112: {
            PushDist = input.ReadInt32();
            break;
          }
          case 168: {
            HpRecovery = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
