// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: grpcEventData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GameMessageCore {

  /// <summary>Holder for reflection information generated from grpcEventData.proto</summary>
  public static partial class GrpcEventDataReflection {

    #region Descriptor
    /// <summary>File descriptor for grpcEventData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrpcEventDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNncnBjRXZlbnREYXRhLnByb3RvEg9nYW1lTWVzc2FnZUNvcmUaFmVudGl0",
            "eVR5cGVEZWZpbmUucHJvdG8aCml0ZW0ucHJvdG8aDHBsYXllci5wcm90bxoM",
            "dmVjdG9yLnByb3RvIt4BChJVc2VyRW50ZXJHYW1lRXZlbnQSEwoLbXNnX3Zl",
            "cnNpb24YASABKAMSHAoUc2NlbmVfc2VydmljZV9hcHBfaWQYAiABKAkSDgoG",
            "bWFwX2lkGAMgASgFEjIKCWJhc2VfZGF0YRgEIAEoCzIfLmdhbWVNZXNzYWdl",
            "Q29yZS5QbGF5ZXJCYXNlRGF0YRIqCghwb3NpdGlvbhgFIAEoCzIYLmdhbWVN",
            "ZXNzYWdlQ29yZS5WZWN0b3IzEiUKA2RpchgGIAEoCzIYLmdhbWVNZXNzYWdl",
            "Q29yZS5WZWN0b3IzIvwBChBLaWxsTW9uc3RlckV2ZW50EhMKC21zZ192ZXJz",
            "aW9uGAEgASgDEhwKFHNjZW5lX3NlcnZpY2VfYXBwX2lkGAIgASgJEg8KB3Vz",
            "ZXJfaWQYAyABKAMSDgoGbWFwX2lkGAQgASgFEioKCHBvc2l0aW9uGAUgASgL",
            "MhguZ2FtZU1lc3NhZ2VDb3JlLlZlY3RvcjMSEwoLbW9uc3Rlcl9jaWQYBiAB",
            "KAUSFAoMbW9uc3Rlcl9uYW1lGAcgASgJEgsKA2V4cBgIIAEoBRIwCglkcm9w",
            "X2xpc3QYCSADKAsyHS5nYW1lTWVzc2FnZUNvcmUuSXRlbUJhc2VJbmZvIuwB",
            "ChBQbGF5ZXJEZWF0aEV2ZW50EhMKC21zZ192ZXJzaW9uGAEgASgDEhwKFHNj",
            "ZW5lX3NlcnZpY2VfYXBwX2lkGAIgASgJEg8KB3VzZXJfaWQYAyABKAMSDgoG",
            "bWFwX2lkGAQgASgFEioKCHBvc2l0aW9uGAUgASgLMhguZ2FtZU1lc3NhZ2VD",
            "b3JlLlZlY3RvcjMSMAoLa2lsbGVyX3R5cGUYBiABKA4yGy5nYW1lTWVzc2Fn",
            "ZUNvcmUuRW50aXR5VHlwZRIRCglraWxsZXJfaWQYByABKAMSEwoLa2lsbGVy",
            "X25hbWUYCCABKAkiyAEKD1NhdmVQbGF5ZXJFdmVudBITCgttc2dfdmVyc2lv",
            "bhgBIAEoAxIcChRzY2VuZV9zZXJ2aWNlX2FwcF9pZBgCIAEoCRIPCgd1c2Vy",
            "X2lkGAMgASgDEg4KBm1hcF9pZBgEIAEoBRIqCghwb3NpdGlvbhgFIAEoCzIY",
            "LmdhbWVNZXNzYWdlQ29yZS5WZWN0b3IzEiUKA2RpchgGIAEoCzIYLmdhbWVN",
            "ZXNzYWdlQ29yZS5WZWN0b3IzEg4KBmN1cl9ocBgHIAEoBSLpAQoPVXNlclVz",
            "ZU5GVEV2ZW50EhMKC21zZ192ZXJzaW9uGAEgASgDEg8KB3VzZXJfaWQYAyAB",
            "KAMSDgoGbmZ0X2lkGAQgASgJEioKCG5mdF90eXBlGAUgASgOMhguZ2FtZU1l",
            "c3NhZ2VDb3JlLk5GVFR5cGUSCwoDbnVtGAYgASgFEioKCHBvc2l0aW9uGAcg",
            "ASgLMhguZ2FtZU1lc3NhZ2VDb3JlLlZlY3RvcjMSOwoPY29uc3VtYWJsZV9k",
            "YXRhGAggASgLMiIuZ2FtZU1lc3NhZ2VDb3JlLk5GVENvbnN1bWFibGVJbmZv",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::GameMessageCore.EntityTypeDefineReflection.Descriptor, global::GameMessageCore.ItemReflection.Descriptor, global::GameMessageCore.PlayerReflection.Descriptor, global::GameMessageCore.VectorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessageCore.UserEnterGameEvent), global::GameMessageCore.UserEnterGameEvent.Parser, new[]{ "MsgVersion", "SceneServiceAppId", "MapId", "BaseData", "Position", "Dir" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessageCore.KillMonsterEvent), global::GameMessageCore.KillMonsterEvent.Parser, new[]{ "MsgVersion", "SceneServiceAppId", "UserId", "MapId", "Position", "MonsterCid", "MonsterName", "Exp", "DropList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessageCore.PlayerDeathEvent), global::GameMessageCore.PlayerDeathEvent.Parser, new[]{ "MsgVersion", "SceneServiceAppId", "UserId", "MapId", "Position", "KillerType", "KillerId", "KillerName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessageCore.SavePlayerEvent), global::GameMessageCore.SavePlayerEvent.Parser, new[]{ "MsgVersion", "SceneServiceAppId", "UserId", "MapId", "Position", "Dir", "CurHp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameMessageCore.UserUseNFTEvent), global::GameMessageCore.UserUseNFTEvent.Parser, new[]{ "MsgVersion", "UserId", "NftId", "NftType", "Num", "Position", "ConsumableData" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 玩家进入游戏
  /// </summary>
  public sealed partial class UserEnterGameEvent : pb::IMessage<UserEnterGameEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserEnterGameEvent> _parser = new pb::MessageParser<UserEnterGameEvent>(() => new UserEnterGameEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserEnterGameEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessageCore.GrpcEventDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserEnterGameEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserEnterGameEvent(UserEnterGameEvent other) : this() {
      msgVersion_ = other.msgVersion_;
      sceneServiceAppId_ = other.sceneServiceAppId_;
      mapId_ = other.mapId_;
      baseData_ = other.baseData_ != null ? other.baseData_.Clone() : null;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserEnterGameEvent Clone() {
      return new UserEnterGameEvent(this);
    }

    /// <summary>Field number for the "msg_version" field.</summary>
    public const int MsgVersionFieldNumber = 1;
    private long msgVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MsgVersion {
      get { return msgVersion_; }
      set {
        msgVersion_ = value;
      }
    }

    /// <summary>Field number for the "scene_service_app_id" field.</summary>
    public const int SceneServiceAppIdFieldNumber = 2;
    private string sceneServiceAppId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SceneServiceAppId {
      get { return sceneServiceAppId_; }
      set {
        sceneServiceAppId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 3;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "base_data" field.</summary>
    public const int BaseDataFieldNumber = 4;
    private global::GameMessageCore.PlayerBaseData baseData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameMessageCore.PlayerBaseData BaseData {
      get { return baseData_; }
      set {
        baseData_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 5;
    private global::GameMessageCore.Vector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameMessageCore.Vector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 6;
    private global::GameMessageCore.Vector3 dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameMessageCore.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserEnterGameEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserEnterGameEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgVersion != other.MsgVersion) return false;
      if (SceneServiceAppId != other.SceneServiceAppId) return false;
      if (MapId != other.MapId) return false;
      if (!object.Equals(BaseData, other.BaseData)) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgVersion != 0L) hash ^= MsgVersion.GetHashCode();
      if (SceneServiceAppId.Length != 0) hash ^= SceneServiceAppId.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (baseData_ != null) hash ^= BaseData.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MsgVersion != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MsgVersion);
      }
      if (SceneServiceAppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SceneServiceAppId);
      }
      if (MapId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MapId);
      }
      if (baseData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BaseData);
      }
      if (position_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Position);
      }
      if (dir_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MsgVersion != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MsgVersion);
      }
      if (SceneServiceAppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SceneServiceAppId);
      }
      if (MapId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MapId);
      }
      if (baseData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BaseData);
      }
      if (position_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Position);
      }
      if (dir_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MsgVersion != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MsgVersion);
      }
      if (SceneServiceAppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneServiceAppId);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (baseData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseData);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserEnterGameEvent other) {
      if (other == null) {
        return;
      }
      if (other.MsgVersion != 0L) {
        MsgVersion = other.MsgVersion;
      }
      if (other.SceneServiceAppId.Length != 0) {
        SceneServiceAppId = other.SceneServiceAppId;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.baseData_ != null) {
        if (baseData_ == null) {
          BaseData = new global::GameMessageCore.PlayerBaseData();
        }
        BaseData.MergeFrom(other.BaseData);
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::GameMessageCore.Vector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::GameMessageCore.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MsgVersion = input.ReadInt64();
            break;
          }
          case 18: {
            SceneServiceAppId = input.ReadString();
            break;
          }
          case 24: {
            MapId = input.ReadInt32();
            break;
          }
          case 34: {
            if (baseData_ == null) {
              BaseData = new global::GameMessageCore.PlayerBaseData();
            }
            input.ReadMessage(BaseData);
            break;
          }
          case 42: {
            if (position_ == null) {
              Position = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 50: {
            if (dir_ == null) {
              Dir = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MsgVersion = input.ReadInt64();
            break;
          }
          case 18: {
            SceneServiceAppId = input.ReadString();
            break;
          }
          case 24: {
            MapId = input.ReadInt32();
            break;
          }
          case 34: {
            if (baseData_ == null) {
              BaseData = new global::GameMessageCore.PlayerBaseData();
            }
            input.ReadMessage(BaseData);
            break;
          }
          case 42: {
            if (position_ == null) {
              Position = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 50: {
            if (dir_ == null) {
              Dir = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 玩家击杀怪物
  /// </summary>
  public sealed partial class KillMonsterEvent : pb::IMessage<KillMonsterEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KillMonsterEvent> _parser = new pb::MessageParser<KillMonsterEvent>(() => new KillMonsterEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KillMonsterEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessageCore.GrpcEventDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KillMonsterEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KillMonsterEvent(KillMonsterEvent other) : this() {
      msgVersion_ = other.msgVersion_;
      sceneServiceAppId_ = other.sceneServiceAppId_;
      userId_ = other.userId_;
      mapId_ = other.mapId_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      monsterCid_ = other.monsterCid_;
      monsterName_ = other.monsterName_;
      exp_ = other.exp_;
      dropList_ = other.dropList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KillMonsterEvent Clone() {
      return new KillMonsterEvent(this);
    }

    /// <summary>Field number for the "msg_version" field.</summary>
    public const int MsgVersionFieldNumber = 1;
    private long msgVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MsgVersion {
      get { return msgVersion_; }
      set {
        msgVersion_ = value;
      }
    }

    /// <summary>Field number for the "scene_service_app_id" field.</summary>
    public const int SceneServiceAppIdFieldNumber = 2;
    private string sceneServiceAppId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SceneServiceAppId {
      get { return sceneServiceAppId_; }
      set {
        sceneServiceAppId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 4;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 5;
    private global::GameMessageCore.Vector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameMessageCore.Vector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "monster_cid" field.</summary>
    public const int MonsterCidFieldNumber = 6;
    private int monsterCid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MonsterCid {
      get { return monsterCid_; }
      set {
        monsterCid_ = value;
      }
    }

    /// <summary>Field number for the "monster_name" field.</summary>
    public const int MonsterNameFieldNumber = 7;
    private string monsterName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MonsterName {
      get { return monsterName_; }
      set {
        monsterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 8;
    private int exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "drop_list" field.</summary>
    public const int DropListFieldNumber = 9;
    private static readonly pb::FieldCodec<global::GameMessageCore.ItemBaseInfo> _repeated_dropList_codec
        = pb::FieldCodec.ForMessage(74, global::GameMessageCore.ItemBaseInfo.Parser);
    private readonly pbc::RepeatedField<global::GameMessageCore.ItemBaseInfo> dropList_ = new pbc::RepeatedField<global::GameMessageCore.ItemBaseInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::GameMessageCore.ItemBaseInfo> DropList {
      get { return dropList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KillMonsterEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KillMonsterEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgVersion != other.MsgVersion) return false;
      if (SceneServiceAppId != other.SceneServiceAppId) return false;
      if (UserId != other.UserId) return false;
      if (MapId != other.MapId) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (MonsterCid != other.MonsterCid) return false;
      if (MonsterName != other.MonsterName) return false;
      if (Exp != other.Exp) return false;
      if(!dropList_.Equals(other.dropList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgVersion != 0L) hash ^= MsgVersion.GetHashCode();
      if (SceneServiceAppId.Length != 0) hash ^= SceneServiceAppId.GetHashCode();
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (MonsterCid != 0) hash ^= MonsterCid.GetHashCode();
      if (MonsterName.Length != 0) hash ^= MonsterName.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      hash ^= dropList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MsgVersion != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MsgVersion);
      }
      if (SceneServiceAppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SceneServiceAppId);
      }
      if (UserId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UserId);
      }
      if (MapId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MapId);
      }
      if (position_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Position);
      }
      if (MonsterCid != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MonsterCid);
      }
      if (MonsterName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MonsterName);
      }
      if (Exp != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Exp);
      }
      dropList_.WriteTo(output, _repeated_dropList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MsgVersion != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MsgVersion);
      }
      if (SceneServiceAppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SceneServiceAppId);
      }
      if (UserId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UserId);
      }
      if (MapId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MapId);
      }
      if (position_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Position);
      }
      if (MonsterCid != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MonsterCid);
      }
      if (MonsterName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MonsterName);
      }
      if (Exp != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Exp);
      }
      dropList_.WriteTo(ref output, _repeated_dropList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MsgVersion != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MsgVersion);
      }
      if (SceneServiceAppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneServiceAppId);
      }
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (MonsterCid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterCid);
      }
      if (MonsterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MonsterName);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      size += dropList_.CalculateSize(_repeated_dropList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KillMonsterEvent other) {
      if (other == null) {
        return;
      }
      if (other.MsgVersion != 0L) {
        MsgVersion = other.MsgVersion;
      }
      if (other.SceneServiceAppId.Length != 0) {
        SceneServiceAppId = other.SceneServiceAppId;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::GameMessageCore.Vector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.MonsterCid != 0) {
        MonsterCid = other.MonsterCid;
      }
      if (other.MonsterName.Length != 0) {
        MonsterName = other.MonsterName;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      dropList_.Add(other.dropList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MsgVersion = input.ReadInt64();
            break;
          }
          case 18: {
            SceneServiceAppId = input.ReadString();
            break;
          }
          case 24: {
            UserId = input.ReadInt64();
            break;
          }
          case 32: {
            MapId = input.ReadInt32();
            break;
          }
          case 42: {
            if (position_ == null) {
              Position = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 48: {
            MonsterCid = input.ReadInt32();
            break;
          }
          case 58: {
            MonsterName = input.ReadString();
            break;
          }
          case 64: {
            Exp = input.ReadInt32();
            break;
          }
          case 74: {
            dropList_.AddEntriesFrom(input, _repeated_dropList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MsgVersion = input.ReadInt64();
            break;
          }
          case 18: {
            SceneServiceAppId = input.ReadString();
            break;
          }
          case 24: {
            UserId = input.ReadInt64();
            break;
          }
          case 32: {
            MapId = input.ReadInt32();
            break;
          }
          case 42: {
            if (position_ == null) {
              Position = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 48: {
            MonsterCid = input.ReadInt32();
            break;
          }
          case 58: {
            MonsterName = input.ReadString();
            break;
          }
          case 64: {
            Exp = input.ReadInt32();
            break;
          }
          case 74: {
            dropList_.AddEntriesFrom(ref input, _repeated_dropList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 玩家死亡
  /// </summary>
  public sealed partial class PlayerDeathEvent : pb::IMessage<PlayerDeathEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerDeathEvent> _parser = new pb::MessageParser<PlayerDeathEvent>(() => new PlayerDeathEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerDeathEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessageCore.GrpcEventDataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDeathEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDeathEvent(PlayerDeathEvent other) : this() {
      msgVersion_ = other.msgVersion_;
      sceneServiceAppId_ = other.sceneServiceAppId_;
      userId_ = other.userId_;
      mapId_ = other.mapId_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      killerType_ = other.killerType_;
      killerId_ = other.killerId_;
      killerName_ = other.killerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerDeathEvent Clone() {
      return new PlayerDeathEvent(this);
    }

    /// <summary>Field number for the "msg_version" field.</summary>
    public const int MsgVersionFieldNumber = 1;
    private long msgVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MsgVersion {
      get { return msgVersion_; }
      set {
        msgVersion_ = value;
      }
    }

    /// <summary>Field number for the "scene_service_app_id" field.</summary>
    public const int SceneServiceAppIdFieldNumber = 2;
    private string sceneServiceAppId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SceneServiceAppId {
      get { return sceneServiceAppId_; }
      set {
        sceneServiceAppId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 4;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 5;
    private global::GameMessageCore.Vector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameMessageCore.Vector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "killer_type" field.</summary>
    public const int KillerTypeFieldNumber = 6;
    private global::GameMessageCore.EntityType killerType_ = global::GameMessageCore.EntityType.All;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameMessageCore.EntityType KillerType {
      get { return killerType_; }
      set {
        killerType_ = value;
      }
    }

    /// <summary>Field number for the "killer_id" field.</summary>
    public const int KillerIdFieldNumber = 7;
    private long killerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long KillerId {
      get { return killerId_; }
      set {
        killerId_ = value;
      }
    }

    /// <summary>Field number for the "killer_name" field.</summary>
    public const int KillerNameFieldNumber = 8;
    private string killerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string KillerName {
      get { return killerName_; }
      set {
        killerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerDeathEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerDeathEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgVersion != other.MsgVersion) return false;
      if (SceneServiceAppId != other.SceneServiceAppId) return false;
      if (UserId != other.UserId) return false;
      if (MapId != other.MapId) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (KillerType != other.KillerType) return false;
      if (KillerId != other.KillerId) return false;
      if (KillerName != other.KillerName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgVersion != 0L) hash ^= MsgVersion.GetHashCode();
      if (SceneServiceAppId.Length != 0) hash ^= SceneServiceAppId.GetHashCode();
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (KillerType != global::GameMessageCore.EntityType.All) hash ^= KillerType.GetHashCode();
      if (KillerId != 0L) hash ^= KillerId.GetHashCode();
      if (KillerName.Length != 0) hash ^= KillerName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MsgVersion != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MsgVersion);
      }
      if (SceneServiceAppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SceneServiceAppId);
      }
      if (UserId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UserId);
      }
      if (MapId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MapId);
      }
      if (position_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Position);
      }
      if (KillerType != global::GameMessageCore.EntityType.All) {
        output.WriteRawTag(48);
        output.WriteEnum((int) KillerType);
      }
      if (KillerId != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(KillerId);
      }
      if (KillerName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(KillerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MsgVersion != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MsgVersion);
      }
      if (SceneServiceAppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SceneServiceAppId);
      }
      if (UserId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UserId);
      }
      if (MapId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MapId);
      }
      if (position_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Position);
      }
      if (KillerType != global::GameMessageCore.EntityType.All) {
        output.WriteRawTag(48);
        output.WriteEnum((int) KillerType);
      }
      if (KillerId != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(KillerId);
      }
      if (KillerName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(KillerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MsgVersion != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MsgVersion);
      }
      if (SceneServiceAppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneServiceAppId);
      }
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (KillerType != global::GameMessageCore.EntityType.All) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) KillerType);
      }
      if (KillerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(KillerId);
      }
      if (KillerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KillerName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerDeathEvent other) {
      if (other == null) {
        return;
      }
      if (other.MsgVersion != 0L) {
        MsgVersion = other.MsgVersion;
      }
      if (other.SceneServiceAppId.Length != 0) {
        SceneServiceAppId = other.SceneServiceAppId;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::GameMessageCore.Vector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.KillerType != global::GameMessageCore.EntityType.All) {
        KillerType = other.KillerType;
      }
      if (other.KillerId != 0L) {
        KillerId = other.KillerId;
      }
      if (other.KillerName.Length != 0) {
        KillerName = other.KillerName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MsgVersion = input.ReadInt64();
            break;
          }
          case 18: {
            SceneServiceAppId = input.ReadString();
            break;
          }
          case 24: {
            UserId = input.ReadInt64();
            break;
          }
          case 32: {
            MapId = input.ReadInt32();
            break;
          }
          case 42: {
            if (position_ == null) {
              Position = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 48: {
            KillerType = (global::GameMessageCore.EntityType) input.ReadEnum();
            break;
          }
          case 56: {
            KillerId = input.ReadInt64();
            break;
          }
          case 66: {
            KillerName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MsgVersion = input.ReadInt64();
            break;
          }
          case 18: {
            SceneServiceAppId = input.ReadString();
            break;
          }
          case 24: {
            UserId = input.ReadInt64();
            break;
          }
          case 32: {
            MapId = input.ReadInt32();
            break;
          }
          case 42: {
            if (position_ == null) {
              Position = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 48: {
            KillerType = (global::GameMessageCore.EntityType) input.ReadEnum();
            break;
          }
          case 56: {
            KillerId = input.ReadInt64();
            break;
          }
          case 66: {
            KillerName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 存储玩家数据
  /// </summary>
  public sealed partial class SavePlayerEvent : pb::IMessage<SavePlayerEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SavePlayerEvent> _parser = new pb::MessageParser<SavePlayerEvent>(() => new SavePlayerEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SavePlayerEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessageCore.GrpcEventDataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavePlayerEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavePlayerEvent(SavePlayerEvent other) : this() {
      msgVersion_ = other.msgVersion_;
      sceneServiceAppId_ = other.sceneServiceAppId_;
      userId_ = other.userId_;
      mapId_ = other.mapId_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      curHp_ = other.curHp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SavePlayerEvent Clone() {
      return new SavePlayerEvent(this);
    }

    /// <summary>Field number for the "msg_version" field.</summary>
    public const int MsgVersionFieldNumber = 1;
    private long msgVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MsgVersion {
      get { return msgVersion_; }
      set {
        msgVersion_ = value;
      }
    }

    /// <summary>Field number for the "scene_service_app_id" field.</summary>
    public const int SceneServiceAppIdFieldNumber = 2;
    private string sceneServiceAppId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SceneServiceAppId {
      get { return sceneServiceAppId_; }
      set {
        sceneServiceAppId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 4;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 5;
    private global::GameMessageCore.Vector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameMessageCore.Vector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 6;
    private global::GameMessageCore.Vector3 dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameMessageCore.Vector3 Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    /// <summary>Field number for the "cur_hp" field.</summary>
    public const int CurHpFieldNumber = 7;
    private int curHp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurHp {
      get { return curHp_; }
      set {
        curHp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SavePlayerEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SavePlayerEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgVersion != other.MsgVersion) return false;
      if (SceneServiceAppId != other.SceneServiceAppId) return false;
      if (UserId != other.UserId) return false;
      if (MapId != other.MapId) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      if (CurHp != other.CurHp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgVersion != 0L) hash ^= MsgVersion.GetHashCode();
      if (SceneServiceAppId.Length != 0) hash ^= SceneServiceAppId.GetHashCode();
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (CurHp != 0) hash ^= CurHp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MsgVersion != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MsgVersion);
      }
      if (SceneServiceAppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SceneServiceAppId);
      }
      if (UserId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UserId);
      }
      if (MapId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MapId);
      }
      if (position_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Position);
      }
      if (dir_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Dir);
      }
      if (CurHp != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CurHp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MsgVersion != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MsgVersion);
      }
      if (SceneServiceAppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SceneServiceAppId);
      }
      if (UserId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UserId);
      }
      if (MapId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MapId);
      }
      if (position_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Position);
      }
      if (dir_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Dir);
      }
      if (CurHp != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CurHp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MsgVersion != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MsgVersion);
      }
      if (SceneServiceAppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneServiceAppId);
      }
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (CurHp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurHp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SavePlayerEvent other) {
      if (other == null) {
        return;
      }
      if (other.MsgVersion != 0L) {
        MsgVersion = other.MsgVersion;
      }
      if (other.SceneServiceAppId.Length != 0) {
        SceneServiceAppId = other.SceneServiceAppId;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::GameMessageCore.Vector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          Dir = new global::GameMessageCore.Vector3();
        }
        Dir.MergeFrom(other.Dir);
      }
      if (other.CurHp != 0) {
        CurHp = other.CurHp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MsgVersion = input.ReadInt64();
            break;
          }
          case 18: {
            SceneServiceAppId = input.ReadString();
            break;
          }
          case 24: {
            UserId = input.ReadInt64();
            break;
          }
          case 32: {
            MapId = input.ReadInt32();
            break;
          }
          case 42: {
            if (position_ == null) {
              Position = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 50: {
            if (dir_ == null) {
              Dir = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 56: {
            CurHp = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MsgVersion = input.ReadInt64();
            break;
          }
          case 18: {
            SceneServiceAppId = input.ReadString();
            break;
          }
          case 24: {
            UserId = input.ReadInt64();
            break;
          }
          case 32: {
            MapId = input.ReadInt32();
            break;
          }
          case 42: {
            if (position_ == null) {
              Position = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 50: {
            if (dir_ == null) {
              Dir = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Dir);
            break;
          }
          case 56: {
            CurHp = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 玩家使用nft
  /// </summary>
  public sealed partial class UserUseNFTEvent : pb::IMessage<UserUseNFTEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserUseNFTEvent> _parser = new pb::MessageParser<UserUseNFTEvent>(() => new UserUseNFTEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserUseNFTEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameMessageCore.GrpcEventDataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserUseNFTEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserUseNFTEvent(UserUseNFTEvent other) : this() {
      msgVersion_ = other.msgVersion_;
      userId_ = other.userId_;
      nftId_ = other.nftId_;
      nftType_ = other.nftType_;
      num_ = other.num_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      consumableData_ = other.consumableData_ != null ? other.consumableData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserUseNFTEvent Clone() {
      return new UserUseNFTEvent(this);
    }

    /// <summary>Field number for the "msg_version" field.</summary>
    public const int MsgVersionFieldNumber = 1;
    private long msgVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MsgVersion {
      get { return msgVersion_; }
      set {
        msgVersion_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "nft_id" field.</summary>
    public const int NftIdFieldNumber = 4;
    private string nftId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NftId {
      get { return nftId_; }
      set {
        nftId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nft_type" field.</summary>
    public const int NftTypeFieldNumber = 5;
    private global::GameMessageCore.NFTType nftType_ = global::GameMessageCore.NFTType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameMessageCore.NFTType NftType {
      get { return nftType_; }
      set {
        nftType_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 6;
    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 7;
    private global::GameMessageCore.Vector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameMessageCore.Vector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "consumable_data" field.</summary>
    public const int ConsumableDataFieldNumber = 8;
    private global::GameMessageCore.NFTConsumableInfo consumableData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GameMessageCore.NFTConsumableInfo ConsumableData {
      get { return consumableData_; }
      set {
        consumableData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserUseNFTEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserUseNFTEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgVersion != other.MsgVersion) return false;
      if (UserId != other.UserId) return false;
      if (NftId != other.NftId) return false;
      if (NftType != other.NftType) return false;
      if (Num != other.Num) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(ConsumableData, other.ConsumableData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MsgVersion != 0L) hash ^= MsgVersion.GetHashCode();
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (NftId.Length != 0) hash ^= NftId.GetHashCode();
      if (NftType != global::GameMessageCore.NFTType.Unknown) hash ^= NftType.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (consumableData_ != null) hash ^= ConsumableData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MsgVersion != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MsgVersion);
      }
      if (UserId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UserId);
      }
      if (NftId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NftId);
      }
      if (NftType != global::GameMessageCore.NFTType.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) NftType);
      }
      if (Num != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Num);
      }
      if (position_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Position);
      }
      if (consumableData_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ConsumableData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MsgVersion != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MsgVersion);
      }
      if (UserId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UserId);
      }
      if (NftId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NftId);
      }
      if (NftType != global::GameMessageCore.NFTType.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) NftType);
      }
      if (Num != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Num);
      }
      if (position_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Position);
      }
      if (consumableData_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ConsumableData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MsgVersion != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MsgVersion);
      }
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (NftId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NftId);
      }
      if (NftType != global::GameMessageCore.NFTType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NftType);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (consumableData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConsumableData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserUseNFTEvent other) {
      if (other == null) {
        return;
      }
      if (other.MsgVersion != 0L) {
        MsgVersion = other.MsgVersion;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.NftId.Length != 0) {
        NftId = other.NftId;
      }
      if (other.NftType != global::GameMessageCore.NFTType.Unknown) {
        NftType = other.NftType;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::GameMessageCore.Vector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.consumableData_ != null) {
        if (consumableData_ == null) {
          ConsumableData = new global::GameMessageCore.NFTConsumableInfo();
        }
        ConsumableData.MergeFrom(other.ConsumableData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MsgVersion = input.ReadInt64();
            break;
          }
          case 24: {
            UserId = input.ReadInt64();
            break;
          }
          case 34: {
            NftId = input.ReadString();
            break;
          }
          case 40: {
            NftType = (global::GameMessageCore.NFTType) input.ReadEnum();
            break;
          }
          case 48: {
            Num = input.ReadInt32();
            break;
          }
          case 58: {
            if (position_ == null) {
              Position = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 66: {
            if (consumableData_ == null) {
              ConsumableData = new global::GameMessageCore.NFTConsumableInfo();
            }
            input.ReadMessage(ConsumableData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MsgVersion = input.ReadInt64();
            break;
          }
          case 24: {
            UserId = input.ReadInt64();
            break;
          }
          case 34: {
            NftId = input.ReadString();
            break;
          }
          case 40: {
            NftType = (global::GameMessageCore.NFTType) input.ReadEnum();
            break;
          }
          case 48: {
            Num = input.ReadInt32();
            break;
          }
          case 58: {
            if (position_ == null) {
              Position = new global::GameMessageCore.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 66: {
            if (consumableData_ == null) {
              ConsumableData = new global::GameMessageCore.NFTConsumableInfo();
            }
            input.ReadMessage(ConsumableData);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
